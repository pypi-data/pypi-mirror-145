{"version":3,"sources":["OnHoverTabs.tsx","index.tsx"],"names":["OnHoverTabs","render","labelName","props","args","iconName","data","forEach","v","i","state","icon","value","label","res","map","id","className","key","onClick","setState","prevState","Streamlit","setComponentValue","theme","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"kTAiBMA,G,wNAEGC,OAAS,WAEd,IAAMC,EAAqB,EAAKC,MAAMC,KAAX,KACrBC,EAAqB,EAAKF,MAAMC,KAAX,SAEvBE,EAAa,GACjBD,EAASE,SAAQ,SAACC,EAAEC,GAAH,OACfH,EAAK,GAAD,mBAAMA,GAAN,CAAY,CAAC,GAAKG,EAAE,EAAG,MAASP,EAAUO,GAAI,KAAOD,QAG3D,EAAKE,MAAQ,CAACC,KAAKL,EAAK,GAAGK,KACbC,MAAMN,EAAK,GAAGO,OAG5B,IAAMC,EAAMR,EAAKS,KAAI,gBAAEC,EAAF,EAAEA,GAAIL,EAAN,EAAMA,KAAME,EAAZ,EAAYA,MAAZ,OACS,wBAAII,UAAU,MACdC,IAAKF,EACLG,QAAS,kBAAM,EAAKC,UAClB,SAAAC,GAAS,MAAK,CAACV,KAAKA,EAAMC,MAAMC,MAChB,kBAAMS,IAAUC,kBAAkBV,QACjD,uBAAGI,UAAU,kBAAkBN,GAAS,0BAAMM,UAAU,aAAaJ,OAMpF,EAAKV,MAAfqB,MAGR,OAEE,yBAAKP,UAAU,UACb,wBAAIA,UAAU,eACbH,K,yBAnCiBW,MA+CTC,cAAwB1B,GC5DzC2B,IAAS1B,OACP,kBAAC,IAAM2B,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.77b8ab10.chunk.js","sourcesContent":["import {\r\n  Streamlit,\r\n  StreamlitComponentBase,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\"\r\nimport React, { ReactNode } from \"react\"\r\n//import \"./components/navbar1.css\";\r\n//import \"./components/componentStyles.css\";\r\nimport \"./components/CSSComp.css\"\r\nimport \"./components/icon.css\"\r\n//import Icon from '@material-ui/core/Icon'\r\n\r\ninterface State {\r\n  value: string,\r\n  icon: string\r\n}\r\n\r\nclass OnHoverTabs extends StreamlitComponentBase<State> {\r\n\r\n  public render = (): ReactNode => {\r\n\r\n    const labelName:string[] = this.props.args[\"name\"]\r\n    const iconName: string[] = this.props.args[\"iconName\"]\r\n\r\n    let data:any[] = [];\r\n    iconName.forEach((v,i) => \r\n      data= [...data, {\"id\":i+1, \"label\": labelName[i], \"icon\":v}]\r\n    )\r\n\r\n    this.state = {icon:data[0].icon,\r\n                  value:data[0].label}\r\n   \r\n\r\n    const res = data.map(({id, icon, label}) => (\r\n                                  <li className=\"tab\"\r\n                                  key={id}\r\n                                  onClick={() => this.setState(\r\n                                    prevState => ({icon:icon, value:label}),\r\n                                                    () => Streamlit.setComponentValue(label)\r\n                                  )}><i className=\"material-icons\">{icon}</i><span className=\"labelName\">{label}</span></li>\r\n                                ))\r\n\r\n\r\n\r\n\r\n    const { theme } = this.props\r\n    const styles: React.CSSProperties = {}\r\n\r\n    return (\r\n  \r\n      <div className=\"navtab\">\r\n        <ul className=\"tab-options\">\r\n        {res}\r\n        </ul>\r\n        \r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n  }\r\n\r\n    \r\n\r\n  export default withStreamlitConnection(OnHoverTabs)\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport OnHoverTabs from \"./OnHoverTabs\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <OnHoverTabs />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}