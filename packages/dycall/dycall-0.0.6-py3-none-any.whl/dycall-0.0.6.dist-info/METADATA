Metadata-Version: 2.1
Name: dycall
Version: 0.0.6
Summary: Run exported symbols from native libraries
Home-page: https://github.com/demberto/dycall
Author: demberto
Author-email: demberto@protonmail.com
License: MIT
Project-URL: Repository, https://github.com/demberto/dycall/
Project-URL: Changelog, https://github.com/demberto/dycall/blob/master/CHANGELOG.md
Project-URL: Tracker, https://github.com/demberto/dycall/issues
Keywords: loader
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: End Users/Desktop
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Natural Language :: Hindi
Classifier: Natural Language :: Marathi
Classifier: Operating System :: MacOS
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Tcl
Classifier: Topic :: Software Development :: Testing
Classifier: Topic :: Utilities
Classifier: Typing :: Typed
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: EasySettings (>=4.0.1)
Requires-Dist: appdirs (>=1.4.4)
Requires-Dist: darkdetect (>=0.5.1)
Requires-Dist: desktop-app (>=0.2.10)
Requires-Dist: lief (>=0.11.5)
Requires-Dist: requests (>=2.27.1)
Requires-Dist: tkinter-tooltip (>=1.3.0)
Requires-Dist: tksheet (>=1.7.1)
Requires-Dist: ttkbootstrap (>=1.7.1)
Requires-Dist: cxxfilt (>=0.3.0) ; platform_system != "Windows"
Requires-Dist: pywin32 (>=303) ; platform_system == "Windows"
Requires-Dist: importlib-metadata ; python_version < "3.8"

<!-- PROJECT SHIELDS -->

![Integrity Action Status][integrity-status]
![Publish Action Status][publish-status]
[![MIT License][license-shield]][license-url]
[![Python Versions][pyversions-shield]][pyversions-url]
[![Package Version][package-version-shield]][package-version-url]
[![security: bandit][bandit-shield]][bandit-url]
[![Code Style: Black][code-style-shield]][code-style-url]

<div align="center">
  <img width="128" height="128" src="https://raw.githubusercontent.com/demberto/DyCall/master/ext/dycall.png">
  <h2>DyCall</h2>
  <h3>Run exported symbols from native libraries</h3>
</div>

## ‚Ñπ About

DyCall is a cross platform GUI application which lets you call exported functions from
platform-native libraries.

_"libraries" refers to dynamic libraries (a.k.a shared objects etc.)._

### ‚ö° Features

- üîé Follows platform-specific library search order.
- üßπ Automatic export name demangling for native libraries.
- #Ô∏è‚É£ Support for ordinal-only exports.
- ‚Ü™Ô∏è Support for _out_ variables.
- üí° Find out export names for non-native libraries as well.
- üõ† Standalone demangler for native ABI mangled names.
- üîÜ Light and dark themes.
- üìú Multi-lingual interface. Currently only Hindi and Marathi are supported.

## üö≤ Getting Started

DyCall requires Python 3.7+ with Tkinter installed.

Install via `pip`:

```none
python -m pip install dycall
```

You can run it via:

```none
python -m dycall-gui
```

You can also install shortcuts (Windows and Linux only):

```none
python -m desktop-app install dycall
```

This will create shortcuts in Windows start menu or an equivalent place on Linux. You
can then run DyCall like any other app, pin it, etc.

To uninstall, first remove any shortcuts if you installed them:

```none
python -m desktop-app uninstall dycall
```

Then uninstall DyCall via pip:

```none
python -m pip uninstall dycall
```

## ‚ñ∂ Usage

_The interface has changed a bit since I recorded this GIF_

<div align="center">
  <img src="https://raw.githubusercontent.com/demberto/DyCall/master/ext/usage.gif"/>
</div>

## ‚ùî FAQ

### 1Ô∏è‚É£ Is it non-blocking?

Yes! Function calls are executed on a separate thread. Although, you cannot close DyCall
while a function is running. I don't think that's possible.

### 2Ô∏è‚É£ How do I pass `nullptr` or `NULL` as an argument?

Select **Type** as `void`

### 3Ô∏è‚É£ How do I pass Win32 data types?

Win32 data types are just `typedef`s to basic C data types.

Use this table below for finding out the correct type to use:

| Win32          | DyCall    |
| -------------- | --------- |
| PCSTR, LPCSTR  | char\*    |
| PWSTR, LPCWSTR | wchar_t\* |
| BYTE           | uint8_t   |
| WORD           | uint16_t  |
| DWORD          | uint32_t  |
| HANDLE         | void\*    |

### 4Ô∏è‚É£ How to pass _out_ variables?

There are no special data types for _out_ parameters, just pass them as normal types,
the changed values will be reflected after execution finishes.

### 5Ô∏è‚É£ How to pass a buffer for an _out_ string?

When using **OUT Mode** for strings, please ensure that none of the arguments are
overwritten to a value whose size/length is greater than that before calling; i.e. input
argument size **must be** equal to or greater than output argument size. If this is not
the case, you can fill the _out_ argument value with random data of length you **know
for sure** is greater than what the _out_ string will have. Since DyCall has no
mechanism to preallocate string buffers, attempts to read beyond the `NULL` character
will result in memory violation errors and crash DyCall.

### 6Ô∏è‚É£ How to find an ordinal-only export?

Ordinal-only exports have names starting with an `@` followed by the ordinal number.

### 7Ô∏è‚É£ I want to add/update a translation

Check the [Adding Translations][adding-translations] section in the contributor's guide.

## üöÄ Roadmap

- [ ] Automatic call convention detection.
- [ ] Function prototype detection from header files or similar.
- [ ] Use a child process to execute, this ensures more stability.

## ü§ù Contributing

Please check the contributor's [guide][contributor-guide].

You can contribute by adding translations, opening issues and filing pull requests. If
that cannot be an option for you, you can directly drop an [email](#contact). All
contributions are welcome and acknowledged.

Contributors should also take a note of the [Code of Conduct][code-of-conduct].

## ¬© License

**DyCall** is distributed under the MIT License. See `LICENSE` for more information.

## üìß Contact

E-mail: demberto@protonmail.com

## üôè Acknowledgments

- [FlatIcon](https://flaticon.com)
- [Best-README-Template](https://github.com/othneildrew/Best-README-Template)
- [Shields](https://shields.io)
- [Keep A Changelog](https://keepachangelog.com)

Additional acknowledgements have been made in the code.

<!-- MARKDOWN LINKS AND IMAGES -->

[adding-translations]: https://github.com/demberto/DyCall/blob/master/CONTRIBUTING.md#adding-translations
[bandit-shield]: https://img.shields.io/badge/security-bandit-yellow.svg
[bandit-url]: https://github.com/PyCQA/bandit
[code-style-shield]: https://img.shields.io/badge/code%20style-black-black
[code-style-url]: https://github.com/psf/black
[code-of-conduct]: https://github.com/demberto/DyCall/blob/master/CODE_OF_CONDUCT.md
[contributor-guide]: https://github.com/demberto/DyCall/blob/master/CONTRIBUTING.md
[integrity-status]: https://img.shields.io/github/workflow/status/demberto/DyCall/integrity?label=integrity
[license-shield]: https://img.shields.io/pypi/l/dycall
[license-url]: https://github.com/demberto/DyCall/blob/master/LICENSE
[publish-status]: https://img.shields.io/github/workflow/status/demberto/DyCall/publish?label=publish
[pyversions-shield]: https://img.shields.io/pypi/pyversions/dycall
[pyversions-url]: https://pypi.org/project/dycall
[package-version-shield]: https://img.shields.io/pypi/v/dycall
[package-version-url]: https://pypi.org/project/dycall


