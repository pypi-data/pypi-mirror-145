{"version":3,"file":"219a981b.js","mappings":";;AAkDA;;AAKA;;AAIA;AACA;AACA;;AAGA;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AAEA;;AAGA;AAKA;AACA;AACA;AACA;;AAEA;;;;;;AAjEA","sources":["webpack://home-assistant-frontend/./src/panels/lovelace/entity-rows/hui-input-datetime-entity-row.ts"],"sourcesContent":["import {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  PropertyValues,\n  TemplateResult,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport \"../../../components/ha-date-input\";\nimport { UNAVAILABLE_STATES, UNKNOWN } from \"../../../data/entity\";\nimport {\n  setInputDateTimeValue,\n  stateToIsoDateString,\n} from \"../../../data/input_datetime\";\nimport type { HomeAssistant } from \"../../../types\";\nimport { hasConfigOrEntityChanged } from \"../common/has-changed\";\nimport \"../components/hui-generic-entity-row\";\nimport { createEntityNotFoundWarning } from \"../components/hui-warning\";\nimport type { EntityConfig, LovelaceRow } from \"./types\";\nimport \"../../../components/ha-time-input\";\nimport { computeStateName } from \"../../../common/entity/compute_state_name\";\n\n@customElement(\"hui-input-datetime-entity-row\")\nclass HuiInputDatetimeEntityRow extends LitElement implements LovelaceRow {\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @state() private _config?: EntityConfig;\n\n  public setConfig(config: EntityConfig): void {\n    if (!config) {\n      throw new Error(\"Invalid configuration\");\n    }\n    this._config = config;\n  }\n\n  protected shouldUpdate(changedProps: PropertyValues): boolean {\n    return hasConfigOrEntityChanged(this, changedProps);\n  }\n\n  protected render(): TemplateResult {\n    if (!this._config || !this.hass) {\n      return html``;\n    }\n\n    const stateObj = this.hass.states[this._config.entity];\n\n    if (!stateObj) {\n      return html`\n        <hui-warning>\n          ${createEntityNotFoundWarning(this.hass, this._config.entity)}\n        </hui-warning>\n      `;\n    }\n\n    const name = this._config.name || computeStateName(stateObj);\n\n    return html`\n      <hui-generic-entity-row\n        .hass=${this.hass}\n        .config=${this._config}\n        .hideName=${stateObj.attributes.has_date &&\n        stateObj.attributes.has_time}\n      >\n        ${stateObj.attributes.has_date\n          ? html`\n              <ha-date-input\n                .label=${stateObj.attributes.has_time ? name : undefined}\n                .locale=${this.hass.locale}\n                .disabled=${UNAVAILABLE_STATES.includes(stateObj.state)}\n                .value=${stateToIsoDateString(stateObj)}\n                @value-changed=${this._dateChanged}\n              >\n              </ha-date-input>\n            `\n          : ``}\n        ${stateObj.attributes.has_time\n          ? html`\n              <ha-time-input\n                .value=${stateObj.state === UNKNOWN\n                  ? \"\"\n                  : stateObj.attributes.has_date\n                  ? stateObj.state.split(\" \")[1]\n                  : stateObj.state}\n                .locale=${this.hass.locale}\n                .disabled=${UNAVAILABLE_STATES.includes(stateObj.state)}\n                @value-changed=${this._timeChanged}\n                @click=${this._stopEventPropagation}\n              ></ha-time-input>\n            `\n          : ``}\n      </hui-generic-entity-row>\n    `;\n  }\n\n  private _stopEventPropagation(ev: Event): void {\n    ev.stopPropagation();\n  }\n\n  private _timeChanged(ev): void {\n    const stateObj = this.hass!.states[this._config!.entity];\n    setInputDateTimeValue(\n      this.hass!,\n      stateObj.entity_id,\n      ev.detail.value,\n      stateObj.attributes.has_date ? stateObj.state.split(\" \")[0] : undefined\n    );\n    ev.target.blur();\n  }\n\n  private _dateChanged(ev): void {\n    const stateObj = this.hass!.states[this._config!.entity];\n\n    setInputDateTimeValue(\n      this.hass!,\n      stateObj.entity_id,\n      stateObj.attributes.has_time ? stateObj.state.split(\" \")[1] : undefined,\n      ev.detail.value\n    );\n\n    ev.target.blur();\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      ha-date-input + ha-time-input {\n        margin-left: 4px;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-input-datetime-entity-row\": HuiInputDatetimeEntityRow;\n  }\n}\n"],"names":[],"sourceRoot":""}