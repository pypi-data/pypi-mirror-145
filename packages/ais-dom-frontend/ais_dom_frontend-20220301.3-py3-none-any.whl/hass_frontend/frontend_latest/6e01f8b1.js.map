{"version":3,"file":"6e01f8b1.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoGA;;;;;ACnEA;AACA;;AAEA;;;;;AAKA;AACA;;;;;AAKA;;;;;;AAQA;;;;;;AAQA;;;;;;AAQA;;;;;;AAQA;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AA1FA","sources":["webpack://home-assistant-frontend/./src/layouts/ha-app-layout.js","webpack://home-assistant-frontend/./src/panels/developer-tools/ha-panel-developer-tools.ts"],"sourcesContent":["/* eslint-plugin-disable lit */\n/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/*\nThis code is copied from app-header-layout.\n'fullbleed' support is removed as Home Assisstant doesn't use it.\ntransform: translate(0) is added.\n*/\n/*\n  FIXME(polymer-modulizer): the above comments were extracted\n  from HTML and may be out of place here. Review them and\n  then delete this comment!\n*/\nimport \"@polymer/app-layout/app-header-layout/app-header-layout\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport \"@polymer/polymer/polymer-element\";\n\nclass HaAppLayout extends customElements.get(\"app-header-layout\") {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n          /**\n         * Force app-header-layout to have its own stacking context so that its parent can\n         * control the stacking of it relative to other elements (e.g. app-drawer-layout).\n         * This could be done using \\`isolation: isolate\\`, but that's not well supported\n         * across browsers.\n         */\n          position: relative;\n          z-index: 0;\n        }\n\n        #wrapper ::slotted([slot=\"header\"]) {\n          @apply --layout-fixed-top;\n          z-index: 1;\n        }\n\n        #wrapper.initializing ::slotted([slot=\"header\"]) {\n          position: relative;\n        }\n\n        :host([has-scrolling-region]) {\n          height: 100%;\n        }\n\n        :host([has-scrolling-region]) #wrapper ::slotted([slot=\"header\"]) {\n          position: absolute;\n        }\n\n        :host([has-scrolling-region])\n          #wrapper.initializing\n          ::slotted([slot=\"header\"]) {\n          position: relative;\n        }\n\n        :host([has-scrolling-region]) #wrapper #contentContainer {\n          @apply --layout-fit;\n          overflow-y: auto;\n          -webkit-overflow-scrolling: touch;\n        }\n\n        :host([has-scrolling-region]) #wrapper.initializing #contentContainer {\n          position: relative;\n        }\n\n        #contentContainer {\n          /* Create a stacking context here so that all children appear below the header. */\n          position: relative;\n          z-index: 0;\n          /* Using 'transform' will cause 'position: fixed' elements to behave like\n           'position: absolute' relative to this element. */\n          transform: translate(0);\n          margin-left: env(safe-area-inset-left);\n          margin-right: env(safe-area-inset-right);\n        }\n\n        @media print {\n          :host([has-scrolling-region]) #wrapper #contentContainer {\n            overflow-y: visible;\n          }\n        }\n      </style>\n\n      <div id=\"wrapper\" class=\"initializing\">\n        <slot id=\"headerSlot\" name=\"header\"></slot>\n\n        <div id=\"contentContainer\"><slot></slot></div>\n        <slot id=\"fab\" name=\"fab\"></slot>\n      </div>\n    `;\n  }\n}\ncustomElements.define(\"ha-app-layout\", HaAppLayout);\n","import \"@polymer/app-layout/app-header/app-header\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar\";\nimport \"@polymer/paper-tabs/paper-tab\";\nimport { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { navigate } from \"../../common/navigate\";\nimport \"../../components/ha-menu-button\";\nimport \"../../components/ha-tabs\";\nimport \"../../layouts/ha-app-layout\";\nimport { haStyle } from \"../../resources/styles\";\nimport { HomeAssistant, Route } from \"../../types\";\nimport \"./developer-tools-router\";\n\n@customElement(\"ha-panel-developer-tools\")\nclass PanelDeveloperTools extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property() public route!: Route;\n\n  @property() public narrow!: boolean;\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    this.hass.loadBackendTranslation(\"title\");\n  }\n\n  protected render(): TemplateResult {\n    const page = this._page;\n    return html`\n      <ha-app-layout>\n        <app-header fixed slot=\"header\">\n          <app-toolbar>\n            <ha-menu-button\n              .hass=${this.hass}\n              .narrow=${this.narrow}\n            ></ha-menu-button>\n            <div main-title>${this.hass.localize(\"panel.developer_tools\")}</div>\n          </app-toolbar>\n          <ha-tabs\n            scrollable\n            attr-for-selected=\"page-name\"\n            .selected=${page}\n            @iron-activate=${this.handlePageSelected}\n          >\n            <paper-tab page-name=\"state\">\n              <span style=\"color: #4a5963; text-align: center;\"\n                ><ha-icon icon=\"hass:state-machine\">></ha-icon><br />\n                ${this.hass.localize(\n                  \"ui.panel.developer-tools.tabs.states.title\"\n                )}\n              </span>\n            </paper-tab>\n            <paper-tab page-name=\"service\">\n              <span style=\"color: #4d2ea4; text-align: center;\"\n                ><ha-icon icon=\"hass:function-variant\">></ha-icon><br />\n                ${this.hass.localize(\n                  \"ui.panel.developer-tools.tabs.services.title\"\n                )}\n              </span>\n            </paper-tab>\n            <paper-tab page-name=\"template\">\n              <span style=\"color: #0d47a1; text-align: center;\"\n                ><ha-icon icon=\"hass:ninja\">></ha-icon><br />\n                ${this.hass.localize(\n                  \"ui.panel.developer-tools.tabs.templates.title\"\n                )}</span\n              >\n            </paper-tab>\n            <paper-tab page-name=\"event\">\n              <span style=\"color: #4c4c4c; text-align: center;\"\n                ><ha-icon icon=\"hass:alert-decagram\">></ha-icon><br />\n                ${this.hass.localize(\n                  \"ui.panel.developer-tools.tabs.events.title\"\n                )}\n              </span>\n            </paper-tab>\n            <paper-tab page-name=\"statistics\">\n              <span style=\"color: #b1345c; text-align: center;\"\n                ><ha-icon icon=\"hass:counter\">></ha-icon><br />\n                ${this.hass.localize(\n                  \"ui.panel.developer-tools.tabs.statistics.title\"\n                )}\n              </span>\n            </paper-tab>\n            <paper-tab page-name=\"android\">\n              <span style=\"color: green; text-align: center;\"\n                ><ha-icon icon=\"hass:android\">></ha-icon><br />Android</span\n              >\n            </paper-tab>\n            <paper-tab page-name=\"console\">\n              <span style=\"color: black; text-align: center;\"\n                ><ha-icon icon=\"hass:console\">></ha-icon><br />Terminal</span\n              >\n            </paper-tab>\n            <paper-tab page-name=\"webcmd\">\n              <span style=\"color: blue; text-align: center;\"\n                ><ha-icon icon=\"hass:folder-home\">></ha-icon><br />Manager</span\n              >\n            </paper-tab>\n          </ha-tabs>\n        </app-header>\n        <developer-tools-router\n          .route=${this.route}\n          .narrow=${this.narrow}\n          .hass=${this.hass}\n        ></developer-tools-router>\n      </ha-app-layout>\n    `;\n  }\n\n  private handlePageSelected(ev) {\n    const newPage = ev.detail.item.getAttribute(\"page-name\");\n    if (newPage !== this._page) {\n      navigate(`/developer-tools/${newPage}`);\n    } else {\n      scrollTo(0, 0);\n    }\n  }\n\n  private get _page() {\n    return this.route.path.substr(1);\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        :host {\n          color: var(--primary-text-color);\n          --paper-card-header-color: var(--primary-text-color);\n        }\n        developer-tools-router {\n          display: block;\n          height: calc(100vh - 104px);\n        }\n        ha-tabs {\n          margin-left: max(env(safe-area-inset-left), 24px);\n          margin-right: max(env(safe-area-inset-right), 24px);\n          --paper-tabs-selection-bar-color: var(\n            --app-header-selection-bar-color,\n            var(--app-header-text-color, #fff)\n          );\n          text-transform: uppercase;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-panel-developer-tools\": PanelDeveloperTools;\n  }\n}\n"],"names":[],"sourceRoot":""}