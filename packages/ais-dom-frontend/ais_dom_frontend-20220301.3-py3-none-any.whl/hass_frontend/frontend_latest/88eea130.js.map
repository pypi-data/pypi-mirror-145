{"version":3,"file":"88eea130.js","mappings":";;AA0DA;AACA;;AAKA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;AAMA;;;;;AAMA;AACA;;;AAGA;AACA;AACA;AAEA;;;AAGA;;AAGA;;AAGA;AAEA;;;AAIA;;;;;;AAMA;;;AAIA;;;;;AAKA;;;;;AAKA;;;;;AAKA;;;AAGA;;;AAIA;;;AAGA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA5HA","sources":["webpack://home-assistant-frontend/./src/panels/config/integrations/integration-panels/ozw/ozw-node-dashboard.ts"],"sourcesContent":["import \"@material/mwc-button/mwc-button\";\nimport { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { navigate } from \"../../../../../common/navigate\";\nimport \"../../../../../components/buttons/ha-call-service-button\";\nimport \"../../../../../components/ha-card\";\nimport {\n  fetchOZWNodeMetadata,\n  fetchOZWNodeStatus,\n  OZWDevice,\n  OZWDeviceMetaDataResponse,\n} from \"../../../../../data/ozw\";\nimport { ERR_NOT_FOUND } from \"../../../../../data/websocket_api\";\nimport \"../../../../../layouts/hass-tabs-subpage\";\nimport { haStyle } from \"../../../../../resources/styles\";\nimport type { HomeAssistant, Route } from \"../../../../../types\";\nimport \"../../../ha-config-section\";\nimport { ozwNodeTabs } from \"./ozw-node-router\";\nimport { showOZWRefreshNodeDialog } from \"./show-dialog-ozw-refresh-node\";\n\n@customElement(\"ozw-node-dashboard\")\nclass OZWNodeDashboard extends LitElement {\n  @property({ type: Object }) public hass!: HomeAssistant;\n\n  @property({ type: Object }) public route!: Route;\n\n  @property({ type: Boolean }) public narrow!: boolean;\n\n  @property({ type: Boolean }) public isWide!: boolean;\n\n  @property() public configEntryId?: string;\n\n  @property() public ozwInstance?;\n\n  @property() public nodeId?;\n\n  @state() private _node?: OZWDevice;\n\n  @state() private _metadata?: OZWDeviceMetaDataResponse;\n\n  @state() private _not_found = false;\n\n  protected firstUpdated() {\n    if (!this.ozwInstance) {\n      navigate(\"/config/ozw/dashboard\", { replace: true });\n    } else if (!this.nodeId) {\n      navigate(`/config/ozw/network/${this.ozwInstance}/nodes`, {\n        replace: true,\n      });\n    } else if (this.hass) {\n      this._fetchData();\n    }\n  }\n\n  protected render(): TemplateResult {\n    if (this._not_found) {\n      return html`\n        <hass-error-screen\n          .hass=${this.hass}\n          .error=${this.hass.localize(\"ui.panel.config.ozw.node.not_found\")}\n        ></hass-error-screen>\n      `;\n    }\n\n    return html`\n      <hass-tabs-subpage\n        .hass=${this.hass}\n        .narrow=${this.narrow}\n        .route=${this.route}\n        .tabs=${ozwNodeTabs(this.ozwInstance, this.nodeId)}\n      >\n        <ha-config-section .narrow=${this.narrow} .isWide=${this.isWide}>\n          <div slot=\"header\">Node Management</div>\n\n          <div slot=\"introduction\">\n            View the status of a node and manage its configuration.\n          </div>\n          ${this._node\n            ? html`\n                <ha-card class=\"content\">\n                  <div class=\"card-content flex\">\n                    <div class=\"node-details\">\n                      <b>\n                        ${this._node.node_manufacturer_name}\n                        ${this._node.node_product_name}\n                      </b>\n                      <br />\n                      Node ID: ${this._node.node_id}<br />\n                      Query Stage: ${this._node.node_query_stage}\n                      ${this._metadata?.metadata.ProductManualURL\n                        ? html` <a\n                            href=${this._metadata.metadata.ProductManualURL}\n                          >\n                            <p>Product Manual</p>\n                          </a>`\n                        : ``}\n                    </div>\n                    ${this._metadata?.metadata.ProductPicBase64\n                      ? html`<img\n                          class=\"product-image\"\n                          src=\"data:image/png;base64,${this._metadata?.metadata\n                            .ProductPicBase64}\"\n                        />`\n                      : ``}\n                  </div>\n                  <div class=\"card-actions\">\n                    <mwc-button @click=${this._refreshNodeClicked}>\n                      Refresh Node\n                    </mwc-button>\n                  </div>\n                </ha-card>\n\n                ${this._metadata\n                  ? html`\n                      <ha-card class=\"content\" header=\"Description\">\n                        <div class=\"card-content\">\n                          ${this._metadata.metadata.Description}\n                        </div>\n                      </ha-card>\n                      <ha-card class=\"content\" header=\"Inclusion\">\n                        <div class=\"card-content\">\n                          ${this._metadata.metadata.InclusionHelp}\n                        </div>\n                      </ha-card>\n                      <ha-card class=\"content\" header=\"Exclusion\">\n                        <div class=\"card-content\">\n                          ${this._metadata.metadata.ExclusionHelp}\n                        </div>\n                      </ha-card>\n                      <ha-card class=\"content\" header=\"Reset\">\n                        <div class=\"card-content\">\n                          ${this._metadata.metadata.ResetHelp}\n                        </div>\n                      </ha-card>\n                      ${this._metadata.metadata.WakeupHelp\n                        ? html`\n                            <ha-card class=\"content\" header=\"WakeUp\">\n                              <div class=\"card-content\">\n                                ${this._metadata.metadata.WakeupHelp}\n                              </div>\n                            </ha-card>\n                          `\n                        : ``}\n                    `\n                  : ``}\n              `\n            : ``}\n        </ha-config-section>\n      </hass-tabs-subpage>\n    `;\n  }\n\n  private async _fetchData() {\n    if (!this.ozwInstance || !this.nodeId) {\n      return;\n    }\n\n    try {\n      this._node = await fetchOZWNodeStatus(\n        this.hass!,\n        this.ozwInstance,\n        this.nodeId\n      );\n      this._metadata = await fetchOZWNodeMetadata(\n        this.hass!,\n        this.ozwInstance,\n        this.nodeId\n      );\n    } catch (err: any) {\n      if (err.code === ERR_NOT_FOUND) {\n        this._not_found = true;\n        return;\n      }\n      throw err;\n    }\n  }\n\n  private async _refreshNodeClicked() {\n    showOZWRefreshNodeDialog(this, {\n      node_id: this.nodeId,\n      ozw_instance: this.ozwInstance,\n    });\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        .secondary {\n          color: var(--secondary-text-color);\n        }\n\n        .content {\n          margin-top: 24px;\n        }\n\n        .content:last-child {\n          margin-bottom: 24px;\n        }\n\n        .sectionHeader {\n          position: relative;\n          padding-right: 40px;\n        }\n\n        ha-card {\n          margin: 0 auto;\n          max-width: 600px;\n        }\n\n        .flex {\n          display: flex;\n          justify-content: space-between;\n        }\n\n        .card-actions.warning ha-call-service-button {\n          color: var(--error-color);\n        }\n\n        .toggle-help-icon {\n          position: absolute;\n          top: -6px;\n          right: 0;\n          color: var(--primary-color);\n        }\n\n        ha-service-description {\n          display: block;\n          color: grey;\n          padding: 0 8px 12px;\n        }\n\n        [hidden] {\n          display: none;\n        }\n\n        .product-image {\n          padding: 12px;\n          max-height: 140px;\n          max-width: 140px;\n        }\n        .card-actions {\n          clear: right;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ozw-node-dashboard\": OZWNodeDashboard;\n  }\n}\n"],"names":[],"sourceRoot":""}