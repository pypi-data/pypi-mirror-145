from pathlib import Path
from typing import Callable, Union

class Bytes:
    def __init__(self, data: bytes) -> None: ...
    def __bytes__(self) -> bytes: ...
    def __add__(self, other: Bytes) -> Bytes: ...

class FileBytes(Bytes):
    def __init__(self, path: Union[str, Path]) -> None: ...

class ObjectBytes(Bytes):
    def __init__(self, obj: object) -> None: ...

class ClassBytes(Bytes):
    def __init__(self, cls: type) -> None: ...

class StringBytes(Bytes):
    def __init__(self, string: str) -> None: ...

class CallableBytes(Bytes):
    def __init__(self, obj: Callable) -> None: ...
