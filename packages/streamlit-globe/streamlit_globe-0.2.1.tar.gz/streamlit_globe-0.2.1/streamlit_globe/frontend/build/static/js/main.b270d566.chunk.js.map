{"version":3,"sources":["assets/earth-day2.jpg","assets/earth-night.jpg","assets/night-sky.png","StreamlitGlobe.tsx","index.tsx"],"names":["module","exports","StreamlitGlobe","render","pointsData","props","args","labelsData","daytime","width","height","undefined","parsedPointsData","JSON","parse","stringify","parsedLabelsData","daytime_img","world_day","world_night","console","log","id","pointAltitude","pointColor","globeImageUrl","backgroundImageUrl","require","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"4GAAAA,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,yC,uDCA3CD,EAAOC,QAAU,IAA0B,uC,2JCUrCC,E,4MAEGC,OAAS,WAGjB,IAAMC,EAAa,EAAKC,MAAMC,KAAX,WACbC,EAAa,EAAKF,MAAMC,KAAX,WACbE,EAAU,EAAKH,MAAMC,KAAX,QACVG,EAAQ,EAAKJ,MAAMC,KAAX,MACRI,EAAS,EAAKL,MAAMC,KAAX,OAEf,QAAoBK,IAAfP,QAA6CO,IAAfJ,EAClC,OAAO,iGAGR,IAAIK,EAAkC,QACnBD,IAAfP,IACHQ,EAAmBC,KAAKC,MAAMD,KAAKE,UAAUX,KAG9C,IAAIY,EAAkC,QACnBL,IAAfJ,IACHS,EAAmBH,KAAKC,MAAMD,KAAKE,UAAUR,KAG9C,IAAIU,EAAcC,IAKlB,MAJgB,UAAZV,IACHS,EAAcE,KAEfC,QAAQC,IAAIJ,GAEX,yBAAKK,GAAG,SACP,kBAAC,IAAD,CACClB,WAAYQ,EACZL,WAAYS,EACZO,cAAc,OACdC,WAAW,QACXf,MAAOA,EACPC,OAAQA,EACRe,cAAeR,EACfS,mBAAoBC,EAAQ,Q,yBAxCHC,KAgDdC,cAAwB3B,GCtDvC4B,IAAS3B,OACP,kBAAC,IAAM4B,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.b270d566.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/earth-day2.8ec81bb4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/earth-night.5350543d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/night-sky.1701d635.png\";","import {\r\n  StreamlitComponentBase,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\"\r\nimport Globe from 'react-globe.gl'\r\nimport React, { ReactNode } from \"react\"\r\n\r\nimport world_day from './assets/earth-day2.jpg';\r\nimport world_night from './assets/earth-night.jpg'\r\n\r\nclass StreamlitGlobe extends StreamlitComponentBase {\r\n\t \r\n  public render = (): ReactNode => {\r\n\t  \r\n\t// parameters\r\n\tconst pointsData = this.props.args[\"pointsData\"];\r\n\tconst labelsData = this.props.args[\"labelsData\"];\r\n\tconst daytime = this.props.args[\"daytime\"];\r\n\tconst width = this.props.args[\"width\"];\r\n\tconst height = this.props.args[\"height\"];\r\n\t\r\n\tif ((pointsData === undefined) && (labelsData === undefined)) {\r\n\t\treturn(<span>Please provide either 'pointsData' or 'labelsData' as argument.</span>);\r\n\t}\r\n\t\r\n\tlet parsedPointsData: Array<object> = [];\r\n\tif (pointsData !== undefined) {\r\n\t\tparsedPointsData = JSON.parse(JSON.stringify(pointsData));\r\n\t}\r\n\t\r\n\tlet parsedLabelsData: Array<object> = [];\r\n\tif (labelsData !== undefined) {\r\n\t\tparsedLabelsData = JSON.parse(JSON.stringify(labelsData));\r\n\t}\r\n\r\n\tlet daytime_img = world_day;\r\n\tif (daytime === \"night\") {\r\n\t\tdaytime_img = world_night;\r\n\t}\r\n\tconsole.log(daytime_img);\r\n\treturn (\r\n\t\t<div id=\"globe\">\r\n\t\t\t<Globe\r\n\t\t\t\tpointsData={parsedPointsData}\r\n\t\t\t\tlabelsData={parsedLabelsData}\r\n\t\t\t\tpointAltitude=\"size\"\r\n\t\t\t\tpointColor=\"color\"\r\n\t\t\t\twidth={width}\r\n\t\t\t\theight={height}\r\n\t\t\t\tglobeImageUrl={daytime_img}\r\n\t\t\t\tbackgroundImageUrl={require('./assets/night-sky.png')}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n\t\r\n  }\r\n}\r\n\r\nexport default withStreamlitConnection(StreamlitGlobe)","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport StreamlitGlobe from \"./StreamlitGlobe\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <StreamlitGlobe />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}