Metadata-Version: 2.1
Name: allianceauth-graphql
Version: 0.1.1
Summary: GraphQL integration for AllianceAuth
Home-page: https://github.com/Maestro-Zacht/allianceauth-graphql
Author: Matteo Ghia
Author-email: matteo.ghia@yahoo.it
License: GNU General Public License v3
Keywords: allianceauth_graphql
Platform: UNKNOWN
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Framework :: Django :: 3.2
Classifier: Operating System :: POSIX :: Linux
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE
License-File: AUTHORS.md
Requires-Dist: allianceauth (<3.0.0,>=2.11.2)
Requires-Dist: graphene-django (<3.0.0,>=2.13)

# allianceauth-graphql

[![version](https://img.shields.io/pypi/v/allianceauth_graphql.svg)](https://pypi.python.org/pypi/allianceauth_graphql)


GraphQL integration for AllianceAuth


Free software: GNU General Public License v3


Usage
=====

This version is still in pre-alpha, as of v0.1.1 it does nothing.


Setup
=====

The following is assuming you have a functioning AllianceAuth installation.


Install plugin
--------------

1. `pip install allianceauth-graphql`.
2. Add `'allianceauth_graphql'` (note the underscore) to the bottom of your `INSTALLED_APPS` in the local.py settings file.
3. Add the following setting at the bottom of your urls.py file:
    ``` python
    GRAPHENE = {
        'SCHEMA': 'allianceauth_graphql.schema.schema',
    }
    ```
4. Edit your projects url.py file:

   > It should look something like this

    ``` python
    from django.conf.urls import include, url
    from allianceauth import urls

    urlpatterns = [
        url(r'', include(urls)),
    ]

    handler500 = 'allianceauth.views.Generic500Redirect'
    handler404 = 'allianceauth.views.Generic404Redirect'
    handler403 = 'allianceauth.views.Generic403Redirect'
    handler400 = 'allianceauth.views.Generic400Redirect'
    ```

   > After the edit:
    
    ``` python
    from django.conf.urls import include, url
    from allianceauth import urls
    from allianceauth_graphql import urls as aa_gql_urls

    urlpatterns = [
        url(r'', include(urls)),
        url(r'graphql/', include(aa_gql_urls)),
    ]

    handler500 = 'allianceauth.views.Generic500Redirect'
    handler404 = 'allianceauth.views.Generic404Redirect'
    handler403 = 'allianceauth.views.Generic403Redirect'
    handler400 = 'allianceauth.views.Generic400Redirect'
    ```



Settings
--------

| Setting       | Default | Description                          |
| ------------- | ------- | ------------------------------------ |
| SHOW_GRAPHIQL | `True`  | Shows the graphiql UI in the browser |




Credits
=======
This package was created with [Cookiecutter](https://github.com/audreyr/cookiecutter) and the [audreyr/cookiecutter-pypackage](https://github.com/audreyr/cookiecutter-pypackage) project template.

History
=======

## v0.1.0 (2022-04-02)
    * Working /graphql/ endpoint and updated requirements.

## v0.1.0 (2022-03-18)
    * First release on PyPI.

