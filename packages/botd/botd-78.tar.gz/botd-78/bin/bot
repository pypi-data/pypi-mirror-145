#!/usr/bin/env python3
# This file is placed in the Public Domain.


"irc bot"


import os
import readline
import termios
import traceback
import sys
import time


sys.path.insert(0, os.getcwd())


from bot.event import Event
from bot.handler import Handler, dispatch
from bot.irc import IRC
from bot.irc import Config as IRCConfig
from bot.kernel import Config, boot, kcmd, wait
from bot.function import format
from bot.thread import launch


import bot.all


Config.workdir = os.path.expanduser("~/.bot")


IRCConfig.channel = "#botlib"
IRCConfig.nick = "botlib"
IRCConfig.realname = "bot library"
IRCConfig.username = "botlib"


class Console(Handler):

    def __init__(self):
        Handler.__init__(self)

    def announce(self, txt):
        pass

    def handle(self, e):
        Handler.handle(self, e)
        e.wait()

    def poll(self):
        e = Event()
        e.txt = input("> ")
        e.orig = repr(self)
        return e

    def raw(self, txt):
        print(txt)


def daemon():
    pid = os.fork()
    if pid != 0:
        os._exit(0)
    os.setsid()
    os.umask(0)
    si = open("/dev/null", 'r')
    so = open("/dev/null", 'a+')
    se = open("/dev/null", 'a+')
    os.dup2(si.fileno(), sys.stdin.fileno())
    os.dup2(so.fileno(), sys.stdout.fileno())
    os.dup2(se.fileno(), sys.stderr.fileno())


def nprint(txt):
    print(txt)
    sys.stdout.flush()
    

def wrap(func):
    fd = sys.stdin.fileno()
    old = termios.tcgetattr(fd)
    try:
        func()
    except (EOFError, KeyboardInterrupt):
        print("")
    finally:
        termios.tcsetattr(fd, termios.TCSADRAIN, old)


def main():
    boot(" ".join(sys.argv[1:]))
    if Config.txt:
        c = Console()
        return kcmd(c, Config.otxt)
    nprint("BOT start at %s" % (time.ctime(time.time()).replace("  ", " ")))
    if Config.daemon:
        daemon()
    i = IRC()
    i.start()
    nprint(format(i.cfg, "server,port,channel,nick,cc"))
    c = Console()
    c.threaded = True
    c.start()
    wait()


wrap(main)
