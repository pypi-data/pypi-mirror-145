Metadata-Version: 2.1
Name: metpx-sr3
Version: 3.0.16
Summary: Subscribe, Acquire, and Re-Advertise products.
Home-page: https://github.com/MetPX/sarracenia
Author: Shared Services Canada, Supercomputing, Data Interchange
Author-email: Peter.Silva@canada.ca
License: GPLv2
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: System Administrators
Classifier: Natural Language :: English
Classifier: License :: OSI Approved :: GNU General Public License v2 (GPLv2)
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Topic :: Communications :: File Sharing
Classifier: Topic :: System :: Logging
Requires-Python: >=3.6
Provides-Extra: amqp
Provides-Extra: ftppoll
Provides-Extra: mqtt
Provides-Extra: vip
License-File: LICENSE.txt
License-File: AUTHORS.rst

==========================
 Sarracenia v3 (MetPX-Sr3)
==========================

page web / homepage: https://metpx.github.io/sarracenia

.. image:: https://img.shields.io/pypi/v/metpx-sr3?style=flat
  :alt: PyPI version
  :target: https://pypi.org/project/metpx-sr3/

.. image:: https://img.shields.io/pypi/pyversions/metpx-sr3.svg
    :alt: Supported Python versions
    :target: https://pypi.python.org/pypi/metpx-sr3.svg

.. image:: https://img.shields.io/pypi/l/metpx-sr3?color=brightgreen
    :alt: License (GPLv2)
    :target: https://pypi.org/project/metpx-sr3/

.. image:: https://img.shields.io/github/issues/MetPX/sarracenia
    :alt: Issue Tracker
    :target: https://github.com/MetPX/sarracenia/issues

.. image:: https://github.com/MetPX/sarracenia/actions/workflows/ghcr.yml/badge.svg
    :alt: Docker Image Build Status
    :target: https://github.com/MetPX/sarracenia/actions/workflows/ghcr.yml

.. image:: https://github.com/MetPX/sarracenia/actions/workflows/flow.yml/badge.svg?branch=v03_wip
    :alt: Run Static Flow
    :target: https://github.com/MetPX/sarracenia/actions/workflows/flow.yml

+----------------------------------------------------------------+------------------------------------------------------------------------+
| [ `Guides <docs/source/Reference/sr3.1.rst#documentation>`_ ]  | [ `Orientation <docs/source/Reference/sr3.1.rst#documentation>`_ ]     |
| [ `Manual Pages <docs/source/Reference/sr3.1.rst#see-also>`_ ] | [ `Référence <docs/source/Reference/sr3.1.rst#see-also>`_ ]            |
+----------------------------------------------------------------+------------------------------------------------------------------------+
|                                                                |                                                                        |
|MetPX-sr3 (Sarracenia v3) is a data duplication                 |MetPX-sr3 (Sarracenia v3) est un engin de copie et de                   |
|or distribution pump that leverages                             |distribution de données qui utilise des                                 |
|existing standard technologies (web                             |technologies standards (tel que les services                            |
|servers and the `AMQP <http://www.amqp.org>`_                   |web et le courtier de messages AMQP) afin                               |
|brokers) to achieve real-time message delivery                  |d'effectuer des transferts de données en                                |
|and end-to-end transparency in file transfers.                  |temps réel tout en permettant une transparence                          |
|Data sources establish a directory structure                    |de bout en bout. Alors que chaque commutateur                           |
|which is carried through any number of                          |Sundew est unique en soit, offrant des                                  |
|intervening pumps until they arrive at a                        |configurations sur mesure et permutations de                            |
|client. The client can provide explicit                         |données multiples, Sarracenia cherche à                                 |
|acknowledgement that propagates back through                    |maintenir l'intégrité de la structure des                               |
|the network to the source. Whereas traditional                  |données, tel que proposée et organisée par la                           |
|file switching is a point-to-point affair                       |source jusqu'à destination. Le client peut fournir                      |
|where knowledge is only between each segment,                   |des accusés de réception qui se propagent                               |
|in Sarracenia, information flows from end-to-                   |à travers tous les noeuds de la chaîne,                                 |
|end in both directions.                                         |en sens inverse jusqu'à la source. Tandis qu'un                         |
|                                                                |commutateur traditionnel échange les données                            |
|At its heart, Sarracenia exposes a tree of                      |de point à point, Sarracenia permet le passage                          |
|web accessible folders (WAF), using any standard                |des données d'un bout à l'autre du réseau,                              |
|HTTP server (tested with apache).  Weather                      |tant dans une direction que dans l'autre.                               |
|applications are soft real-time, where data                     |                                                                        |
|should be delivered as quickly as possible to                   |Sarracenia, à sa plus simple expression,                                |
|the next hop, and minutes, perhaps seconds,                     |expose une arborescence de dossiers disponibles                         |
|count. The standard web push technologies, ATOM,                |sur la toile ("Web Accessible Folders"). Le                             |
|RSS, etc... are actually polling technologies                   |temps de latence est une composante névralgique                         |
|that when used in low latency applications                      |des applications météo: les minutes, et parfois                         |
|consume a great deal of bandwidth and overhead.                 |les secondes, sont comptées. Les technologies                           |
|For exactly these reasons, those standards                      |standards, telles que ATOM et RSS, sont des                             |
|stipulate a minimum polling interval of five                    |technologies qui consomment beaucoup de bande                           |
|minutes. Advanced Message Queueing Protocol                     |passante et de ressouces lorsqu'elles doivent                           |
|(AMQP) messaging brings true push to                            |répondre à ces contraintes. Ces standards                               |
|notifications, and makes real-time sending                      |limitent la fréquence maximale de vérification                          |
|far more efficient.                                             |du serveur à cinq minutes. Le protocole de                              |
|                                                                |séquencement de messages avancés (Advanced                              |
|                                                                |Message Queuing Protocol, AMQP) est une                                 |
|                                                                |approche beaucoup plus efficace pour la                                 |
|                                                                |livraison d'annonces de nouveaux produits.                              |
|                                                                |                                                                        |
+----------------------------------------------------------------+------------------------------------------------------------------------+
|An initiative of Shared Services Canada                         |Une initiative de Services partagés Canada                              |
|http://ssc-spc.gc.ca in support of internal                     |https://ssc-spc.gc.ca pour appuyer les opérations                       |
|needs of the Government of Canada                               |du gouvernement du Canada                                               |
|                                                                |                                                                        |
+----------------------------------------------------------------+------------------------------------------------------------------------+


Concepts: `Sarracenia in 10 Minutes Video (anglais seulement) <https://www.youtube.com/watch?v=G47DRwzwckk>`_


===============
 Release Notes 
===============

lists all changes between versions.

**git repo**

v03_wip ... still in development, too many changes to list.
unstable, breaking changes possible, only for experimental use.


**3.00.15b2**

  * #490 implemented CI/CD matrix doing flow tests with multiple python versions.
  * #489 sourceFromExchange was missing implementation.
  * #488 there was a problem with recovering from connection failures.
  * #487 fixed to ignore unjustified flow test failures.
  * #486 problem with inflight.
  * #483, #455, #479 debian packaging working again, based on use of extras (optional components.)
  * improved messaging of mdelaylatest flow callback.
  * large, numerous improvements in the documentation (approaching release quality.) 
  * tls_rigour becomes tlsRigour (in implementation, was only documented that way before.)
  * #480 sr3 status display problem not ignoring files that are not .conf ones.
  * #477 sr3 edit of default.conf, credentials.conf, admin.conf work again.

**3.00.14.b1**

  * forked off from v2.
  * has MQTT support.
  * just incrementing minor release as dev. 
  * non-stable releases for now.
  * now in beta: no more breaking changes expected.
  * 3.x is a deep re-factor vs. 2.x 
  * for more information, see new web-site: https://metpx.github.io/sarracenia



Peter Silva <peter.silva@canada.ca>
  Project Prime mover, Manager & Evangelist. A lot of Documentation, and 
  Review of Docs. Much discussion with Michel. Small bug fixes.
  wrote none of the code in v2, except most (all?) plugins included with package.
  added the 'plugin' model to v2. Main blame for sr3.
  

Cléa Aumont 
  refactoring of FTP processing to fix timezone support.
  porting many plugins from v2 to sr3. Resolved issued with xattr python modules
  several fixes to status... hmm...
  how about issues: #447, #438, #435, #433, #433, #381, #378, #366, #350

Reid Sunderland 
  Added SASL authentication and vhost support.
  Extensive work getting flow tests working with sr3.
  worked on some refactoring as well.

Cody Au 
  fixes #413, #387,  #348. working on sr process management.

Michel Grenier <michel.grenier@IamRetiredNow.ca> (Retired)
  dd_subscribe, sr_subscribe, sr_sarra, sr_post, 
  All of the code until 2016/03. 
  A lot of the code, until 2017/08-2018/05 (major refactoring.)
  Retired now...
  none of the code since sr3, but a lot was copy/pasted.

Jun Hu <jun.hu3@canada.ca>
  Documentation Diagrams, lead on some deployments (head tester!)
  plugin work.

Noureddine Habili <Noureddine.Habili@canada.ca>
  lead on other deployments ( project lead on Sarrasemina )
  plugin work.

Benoit Lapointe <Benoit.Lapointe@canada.ca>
  Improving testing frameworks/ Design documentation / code hygiene.
  Some MQTT interop work. 

Khosrow Ebrahimpour <khosrow@ChangedJobs.ca> (no long involved.)
  Packaging & Process (Debian, Launchpad, some pypi, the vagrant self-test)
  originally proposed migration to github.

Daluma Sen <Daluma.Sen@canada.ca>
  some work on sr_watch, and worked on sr_post as well for caching.

Murray Rennie <Murray.Rennie@canada.ca>
  sr_winnow, worked on that with Michel.
  lots of work on plugins and LDM bridge for UNIDATA and NOAAPORT ingest.

Dominic.Racette <Dominic.Racette@canada.ca>
  actually a client, not really an author, but participation was crucial.
  for five years of patient testing in a very large deployment scenario.


credit for Sarracenia image used as github avatar photo
  Jay Lechtman jay.lechtman@gmail.com - www.horrorculture.weebly.com



