# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetInstanceSizeResult',
    'AwaitableGetInstanceSizeResult',
    'get_instance_size',
    'get_instance_size_output',
]

@pulumi.output_type
class GetInstanceSizeResult:
    """
    A collection of values returned by getInstanceSize.
    """
    def __init__(__self__, id=None, name=None, ram=None, vcores=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if ram and not isinstance(ram, float):
            raise TypeError("Expected argument 'ram' to be a float")
        pulumi.set(__self__, "ram", ram)
        if vcores and not isinstance(vcores, int):
            raise TypeError("Expected argument 'vcores' to be a int")
        pulumi.set(__self__, "vcores", vcores)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> Optional[str]:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def ram(self) -> Optional[float]:
        return pulumi.get(self, "ram")

    @property
    @pulumi.getter
    def vcores(self) -> Optional[int]:
        return pulumi.get(self, "vcores")


class AwaitableGetInstanceSizeResult(GetInstanceSizeResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetInstanceSizeResult(
            id=self.id,
            name=self.name,
            ram=self.ram,
            vcores=self.vcores)


def get_instance_size(name: Optional[str] = None,
                      ram: Optional[float] = None,
                      vcores: Optional[int] = None,
                      opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetInstanceSizeResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['ram'] = ram
    __args__['vcores'] = vcores
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('oneandone:index/getInstanceSize:getInstanceSize', __args__, opts=opts, typ=GetInstanceSizeResult).value

    return AwaitableGetInstanceSizeResult(
        id=__ret__.id,
        name=__ret__.name,
        ram=__ret__.ram,
        vcores=__ret__.vcores)


@_utilities.lift_output_func(get_instance_size)
def get_instance_size_output(name: Optional[pulumi.Input[Optional[str]]] = None,
                             ram: Optional[pulumi.Input[Optional[float]]] = None,
                             vcores: Optional[pulumi.Input[Optional[int]]] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetInstanceSizeResult]:
    """
    Use this data source to access information about an existing resource.
    """
    ...
