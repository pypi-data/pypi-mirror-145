from __future__ import absolute_import# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: skein.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0bskein.proto\x12\x05skein\"\x07\n\x05\x45mpty\"K\n\x0b\x46inalStatus\"<\n\x04Type\x12\r\n\tUNDEFINED\x10\x00\x12\r\n\tSUCCEEDED\x10\x01\x12\n\n\x06\x46\x41ILED\x10\x02\x12\n\n\x06KILLED\x10\x03\"\x83\x01\n\x10\x41pplicationState\"o\n\x04Type\x12\x07\n\x03NEW\x10\x00\x12\x0e\n\nNEW_SAVING\x10\x01\x12\r\n\tSUBMITTED\x10\x02\x12\x0c\n\x08\x41\x43\x43\x45PTED\x10\x03\x12\x0b\n\x07RUNNING\x10\x04\x12\x0c\n\x08\x46INISHED\x10\x05\x12\n\n\x06\x46\x41ILED\x10\x06\x12\n\n\x06KILLED\x10\x07\"H\n\tResources\x12\x0e\n\x06memory\x18\x01 \x01(\x05\x12\x0e\n\x06vcores\x18\x02 \x01(\x05\x12\x0c\n\x04gpus\x18\x03 \x01(\x03\x12\r\n\x05\x66pgas\x18\x04 \x01(\x03\"?\n\x03Url\x12\x0e\n\x06scheme\x18\x01 \x01(\t\x12\x0c\n\x04host\x18\x02 \x01(\t\x12\x0c\n\x04port\x18\x03 \x01(\x05\x12\x0c\n\x04\x66ile\x18\x04 \x01(\t\"\xe6\x01\n\x04\x46ile\x12\x1a\n\x06source\x18\x01 \x01(\x0b\x32\n.skein.Url\x12\x1e\n\x04type\x18\x02 \x01(\x0e\x32\x10.skein.File.Type\x12*\n\nvisibility\x18\x03 \x01(\x0e\x32\x16.skein.File.Visibility\x12\x0c\n\x04size\x18\x04 \x01(\x03\x12\x11\n\ttimestamp\x18\x05 \x01(\x03\"\x1d\n\x04Type\x12\x08\n\x04\x46ILE\x10\x00\x12\x0b\n\x07\x41RCHIVE\x10\x01\"6\n\nVisibility\x12\n\n\x06PUBLIC\x10\x00\x12\x0b\n\x07PRIVATE\x10\x01\x12\x0f\n\x0b\x41PPLICATION\x10\x02\"\x91\x03\n\x07Service\x12\x11\n\tinstances\x18\x01 \x01(\x05\x12\x12\n\nnode_label\x18\x02 \x01(\t\x12\r\n\x05nodes\x18\x03 \x03(\t\x12\r\n\x05racks\x18\x04 \x03(\t\x12\x16\n\x0erelax_locality\x18\x05 \x01(\x08\x12\x14\n\x0cmax_restarts\x18\x06 \x01(\x05\x12\x16\n\x0e\x61llow_failures\x18\x07 \x01(\x08\x12#\n\tresources\x18\x08 \x01(\x0b\x32\x10.skein.Resources\x12(\n\x05\x66iles\x18\t \x03(\x0b\x32\x19.skein.Service.FilesEntry\x12$\n\x03\x65nv\x18\n \x03(\x0b\x32\x17.skein.Service.EnvEntry\x12\x0e\n\x06script\x18\x0b \x01(\t\x12\x0f\n\x07\x64\x65pends\x18\x0c \x03(\t\x1a\x39\n\nFilesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x1a\n\x05value\x18\x02 \x01(\x0b\x32\x0b.skein.File:\x02\x38\x01\x1a*\n\x08\x45nvEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"~\n\x04\x41\x63ls\x12\x0e\n\x06\x65nable\x18\x01 \x01(\x08\x12\x12\n\nview_users\x18\x02 \x03(\t\x12\x13\n\x0bview_groups\x18\x03 \x03(\t\x12\x14\n\x0cmodify_users\x18\x04 \x03(\t\x12\x15\n\rmodify_groups\x18\x05 \x03(\t\x12\x10\n\x08ui_users\x18\x06 \x03(\t\"`\n\x03Log\"Y\n\x05Level\x12\x08\n\x04INFO\x10\x00\x12\x07\n\x03\x41LL\x10\x01\x12\t\n\x05TRACE\x10\x02\x12\t\n\x05\x44\x45\x42UG\x10\x03\x12\x08\n\x04WARN\x10\x04\x12\t\n\x05\x45RROR\x10\x05\x12\t\n\x05\x46\x41TAL\x10\x06\x12\x07\n\x03OFF\x10\x07\"\x87\x01\n\x08Security\x12 \n\tcert_file\x18\x01 \x01(\x0b\x32\x0b.skein.FileH\x00\x12\x14\n\ncert_bytes\x18\x02 \x01(\x0cH\x00\x12\x1f\n\x08key_file\x18\x03 \x01(\x0b\x32\x0b.skein.FileH\x01\x12\x13\n\tkey_bytes\x18\x04 \x01(\x0cH\x01\x42\x06\n\x04\x63\x65rtB\x05\n\x03key\"\xdb\x02\n\x06Master\x12\x1f\n\nlog_config\x18\x01 \x01(\x0b\x32\x0b.skein.File\x12#\n\tlog_level\x18\x02 \x01(\x0e\x32\x10.skein.Log.Level\x12!\n\x08security\x18\x03 \x01(\x0b\x32\x0f.skein.Security\x12#\n\tresources\x18\x04 \x01(\x0b\x32\x10.skein.Resources\x12\'\n\x05\x66iles\x18\x05 \x03(\x0b\x32\x18.skein.Master.FilesEntry\x12#\n\x03\x65nv\x18\x06 \x03(\x0b\x32\x16.skein.Master.EnvEntry\x12\x0e\n\x06script\x18\x07 \x01(\t\x1a\x39\n\nFilesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x1a\n\x05value\x18\x02 \x01(\x0b\x32\x0b.skein.File:\x02\x38\x01\x1a*\n\x08\x45nvEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xbd\x02\n\x0f\x41pplicationSpec\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05queue\x18\x02 \x01(\t\x12\x0c\n\x04user\x18\x03 \x01(\t\x12\x12\n\nnode_label\x18\x04 \x01(\t\x12\x14\n\x0cmax_attempts\x18\x05 \x01(\x05\x12\x0c\n\x04tags\x18\x06 \x03(\t\x12\x14\n\x0c\x66ile_systems\x18\x07 \x03(\t\x12\x19\n\x04\x61\x63ls\x18\x08 \x01(\x0b\x32\x0b.skein.Acls\x12\x1d\n\x06master\x18\t \x01(\x0b\x32\r.skein.Master\x12\x36\n\x08services\x18\n \x03(\x0b\x32$.skein.ApplicationSpec.ServicesEntry\x1a?\n\rServicesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x1d\n\x05value\x18\x02 \x01(\x0b\x32\x0e.skein.Service:\x02\x38\x01\"\xad\x02\n\tContainer\x12\x14\n\x0cservice_name\x18\x01 \x01(\t\x12\x10\n\x08instance\x18\x02 \x01(\x05\x12%\n\x05state\x18\x03 \x01(\x0e\x32\x16.skein.Container.State\x12\x19\n\x11yarn_container_id\x18\x04 \x01(\t\x12\x1e\n\x16yarn_node_http_address\x18\x05 \x01(\t\x12\x12\n\nstart_time\x18\x06 \x01(\x03\x12\x13\n\x0b\x66inish_time\x18\x07 \x01(\x03\x12\x14\n\x0c\x65xit_message\x18\x08 \x01(\t\"W\n\x05State\x12\x0b\n\x07WAITING\x10\x00\x12\r\n\tREQUESTED\x10\x01\x12\x0b\n\x07RUNNING\x10\x02\x12\r\n\tSUCCEEDED\x10\x03\x12\n\n\x06\x46\x41ILED\x10\x04\x12\n\n\x06KILLED\x10\x05\"\xe5\x01\n\x13ResourceUsageReport\x12\x16\n\x0ememory_seconds\x18\x01 \x01(\x03\x12\x15\n\rvcore_seconds\x18\x02 \x01(\x03\x12\x1b\n\x13num_used_containers\x18\x03 \x01(\x03\x12*\n\x10needed_resources\x18\x04 \x01(\x0b\x32\x10.skein.Resources\x12,\n\x12reserved_resources\x18\x05 \x01(\x0b\x32\x10.skein.Resources\x12(\n\x0eused_resources\x18\x06 \x01(\x0b\x32\x10.skein.Resources\"\xe1\x02\n\x11\x41pplicationReport\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x0c\n\x04user\x18\x03 \x01(\t\x12\r\n\x05queue\x18\x04 \x01(\t\x12\x0c\n\x04tags\x18\x05 \x03(\t\x12\x0c\n\x04host\x18\x06 \x01(\t\x12\x0c\n\x04port\x18\x07 \x01(\x05\x12\x14\n\x0ctracking_url\x18\x08 \x01(\t\x12+\n\x05state\x18\t \x01(\x0e\x32\x1c.skein.ApplicationState.Type\x12-\n\x0c\x66inal_status\x18\n \x01(\x0e\x32\x17.skein.FinalStatus.Type\x12\x10\n\x08progress\x18\x0b \x01(\x02\x12)\n\x05usage\x18\x0c \x01(\x0b\x32\x1a.skein.ResourceUsageReport\x12\x13\n\x0b\x64iagnostics\x18\r \x01(\t\x12\x12\n\nstart_time\x18\x0e \x01(\x03\x12\x13\n\x0b\x66inish_time\x18\x0f \x01(\x03\"\x87\x01\n\tNodeState\"z\n\x04Type\x12\x12\n\x0e\x44\x45\x43OMMISSIONED\x10\x00\x12\x13\n\x0f\x44\x45\x43OMMISSIONING\x10\x01\x12\x08\n\x04LOST\x10\x02\x12\x07\n\x03NEW\x10\x03\x12\x0c\n\x08REBOOTED\x10\x04\x12\x0b\n\x07RUNNING\x10\x05\x12\x0c\n\x08SHUTDOWN\x10\x06\x12\r\n\tUNHEALTHY\x10\x07\"\xe3\x01\n\nNodeReport\x12\n\n\x02id\x18\x01 \x01(\t\x12\x14\n\x0chttp_address\x18\x02 \x01(\t\x12\x11\n\track_name\x18\x03 \x01(\t\x12\x0e\n\x06labels\x18\x04 \x03(\t\x12$\n\x05state\x18\x05 \x01(\x0e\x32\x15.skein.NodeState.Type\x12\x15\n\rhealth_report\x18\x06 \x01(\t\x12)\n\x0ftotal_resources\x18\x07 \x01(\x0b\x32\x10.skein.Resources\x12(\n\x0eused_resources\x18\x08 \x01(\x0b\x32\x10.skein.Resources\"\xca\x01\n\x05Queue\x12\x0c\n\x04name\x18\x01 \x01(\t\x12!\n\x05state\x18\x02 \x01(\x0e\x32\x12.skein.Queue.State\x12\x10\n\x08\x63\x61pacity\x18\x03 \x01(\x02\x12\x14\n\x0cmax_capacity\x18\x04 \x01(\x02\x12\x14\n\x0cpercent_used\x18\x05 \x01(\x02\x12\x13\n\x0bnode_labels\x18\x06 \x03(\t\x12\x1a\n\x12\x64\x65\x66\x61ult_node_label\x18\x07 \x01(\t\"!\n\x05State\x12\x0b\n\x07RUNNING\x10\x00\x12\x0b\n\x07STOPPED\x10\x01\"\x19\n\x0b\x41pplication\x12\n\n\x02id\x18\x01 \x01(\t\"\xc8\x01\n\x13\x41pplicationsRequest\x12,\n\x06states\x18\x01 \x03(\x0e\x32\x1c.skein.ApplicationState.Type\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x0c\n\x04user\x18\x03 \x01(\t\x12\r\n\x05queue\x18\x04 \x01(\t\x12\x15\n\rstarted_begin\x18\x05 \x01(\x03\x12\x13\n\x0bstarted_end\x18\x06 \x01(\x03\x12\x16\n\x0e\x66inished_begin\x18\x07 \x01(\x03\x12\x14\n\x0c\x66inished_end\x18\x08 \x01(\x03\"A\n\x14\x41pplicationsResponse\x12)\n\x07reports\x18\x01 \x03(\x0b\x32\x18.skein.ApplicationReport\"5\n\x0cNodesRequest\x12%\n\x06states\x18\x01 \x03(\x0e\x32\x15.skein.NodeState.Type\"3\n\rNodesResponse\x12\"\n\x07reports\x18\x01 \x03(\x0b\x32\x11.skein.NodeReport\"\x1c\n\x0cQueueRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\".\n\x0eQueuesResponse\x12\x1c\n\x06queues\x18\x01 \x03(\x0b\x32\x0c.skein.Queue\"\'\n\x0bLogsRequest\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04user\x18\x02 \x01(\t\"h\n\x0cLogsResponse\x12+\n\x04logs\x18\x02 \x03(\x0b\x32\x1d.skein.LogsResponse.LogsEntry\x1a+\n\tLogsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"(\n\x0bMoveRequest\x12\n\n\x02id\x18\x01 \x01(\t\x12\r\n\x05queue\x18\x02 \x01(\t\"\'\n\x0bKillRequest\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04user\x18\x02 \x01(\t\"U\n\x0fShutdownRequest\x12-\n\x0c\x66inal_status\x18\x01 \x01(\x0e\x32\x17.skein.FinalStatus.Type\x12\x13\n\x0b\x64iagnostics\x18\x02 \x01(\t\"O\n\x08KeyValue\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x0c\x12\'\n\x05owner\x18\x03 \x01(\x0b\x32\x18.skein.ContainerInstance\"\x92\x01\n\x0fGetRangeRequest\x12\r\n\x05start\x18\x01 \x01(\t\x12\x0b\n\x03\x65nd\x18\x02 \x01(\t\x12\x36\n\x0bresult_type\x18\x03 \x01(\x0e\x32!.skein.GetRangeRequest.ResultType\"+\n\nResultType\x12\t\n\x05ITEMS\x10\x00\x12\x08\n\x04KEYS\x10\x01\x12\x08\n\x04NONE\x10\x02\"z\n\x10GetRangeResponse\x12\r\n\x05\x63ount\x18\x01 \x01(\x05\x12\x36\n\x0bresult_type\x18\x02 \x01(\x0e\x32!.skein.GetRangeRequest.ResultType\x12\x1f\n\x06result\x18\x03 \x03(\x0b\x32\x0f.skein.KeyValue\"\x99\x01\n\rPutKeyRequest\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x0c\x12\'\n\x05owner\x18\x03 \x01(\x0b\x32\x18.skein.ContainerInstance\x12\x14\n\x0cignore_value\x18\x04 \x01(\x08\x12\x14\n\x0cignore_owner\x18\x05 \x01(\x08\x12\x17\n\x0freturn_previous\x18\x06 \x01(\x08\"L\n\x0ePutKeyResponse\x12\x17\n\x0freturn_previous\x18\x01 \x01(\x08\x12!\n\x08previous\x18\x02 \x01(\x0b\x32\x0f.skein.KeyValue\"\x98\x01\n\x12\x44\x65leteRangeRequest\x12\r\n\x05start\x18\x01 \x01(\t\x12\x0b\n\x03\x65nd\x18\x02 \x01(\t\x12\x39\n\x0bresult_type\x18\x03 \x01(\x0e\x32$.skein.DeleteRangeRequest.ResultType\"+\n\nResultType\x12\x08\n\x04NONE\x10\x00\x12\t\n\x05ITEMS\x10\x01\x12\x08\n\x04KEYS\x10\x02\"\x80\x01\n\x13\x44\x65leteRangeResponse\x12\r\n\x05\x63ount\x18\x01 \x01(\x05\x12\x39\n\x0bresult_type\x18\x02 \x01(\x0e\x32$.skein.DeleteRangeRequest.ResultType\x12\x1f\n\x06result\x18\x03 \x03(\x0b\x32\x0f.skein.KeyValue\"\xae\x02\n\tCondition\x12\x0b\n\x03key\x18\x01 \x01(\t\x12+\n\x08operator\x18\x02 \x01(\x0e\x32\x19.skein.Condition.Operator\x12%\n\x05\x66ield\x18\x03 \x01(\x0e\x32\x16.skein.Condition.Field\x12\x0f\n\x05value\x18\x04 \x01(\x0cH\x00\x12)\n\x05owner\x18\x05 \x01(\x0b\x32\x18.skein.ContainerInstanceH\x00\"^\n\x08Operator\x12\t\n\x05\x45QUAL\x10\x00\x12\r\n\tNOT_EQUAL\x10\x01\x12\x08\n\x04LESS\x10\x02\x12\x0e\n\nLESS_EQUAL\x10\x03\x12\x0b\n\x07GREATER\x10\x04\x12\x11\n\rGREATER_EQUAL\x10\x05\"\x1d\n\x05\x46ield\x12\t\n\x05VALUE\x10\x00\x12\t\n\x05OWNER\x10\x01\x42\x05\n\x03rhs\"\x9f\x01\n\tOpRequest\x12+\n\tget_range\x18\x01 \x01(\x0b\x32\x16.skein.GetRangeRequestH\x00\x12\'\n\x07put_key\x18\x02 \x01(\x0b\x32\x14.skein.PutKeyRequestH\x00\x12\x31\n\x0c\x64\x65lete_range\x18\x03 \x01(\x0b\x32\x19.skein.DeleteRangeRequestH\x00\x42\t\n\x07request\"\xa4\x01\n\nOpResponse\x12,\n\tget_range\x18\x01 \x01(\x0b\x32\x17.skein.GetRangeResponseH\x00\x12(\n\x07put_key\x18\x02 \x01(\x0b\x32\x15.skein.PutKeyResponseH\x00\x12\x32\n\x0c\x64\x65lete_range\x18\x03 \x01(\x0b\x32\x1a.skein.DeleteRangeResponseH\x00\x42\n\n\x08response\"\x85\x01\n\x12TransactionRequest\x12#\n\tcondition\x18\x01 \x03(\x0b\x32\x10.skein.Condition\x12$\n\non_success\x18\x02 \x03(\x0b\x32\x10.skein.OpRequest\x12$\n\non_failure\x18\x03 \x03(\x0b\x32\x10.skein.OpRequest\"K\n\x13TransactionResponse\x12\x11\n\tsucceeded\x18\x01 \x01(\x08\x12!\n\x06result\x18\x02 \x03(\x0b\x32\x11.skein.OpResponse\"\x8a\x01\n\x12WatchCreateRequest\x12\r\n\x05start\x18\x01 \x01(\t\x12\x0b\n\x03\x65nd\x18\x02 \x01(\t\x12\x32\n\nevent_type\x18\x03 \x01(\x0e\x32\x1e.skein.WatchCreateRequest.Type\"$\n\x04Type\x12\x07\n\x03\x41LL\x10\x00\x12\x07\n\x03PUT\x10\x01\x12\n\n\x06\x44\x45LETE\x10\x02\"&\n\x12WatchCancelRequest\x12\x10\n\x08watch_id\x18\x01 \x01(\x05\"s\n\x0cWatchRequest\x12+\n\x06\x63reate\x18\x01 \x01(\x0b\x32\x19.skein.WatchCreateRequestH\x00\x12+\n\x06\x63\x61ncel\x18\x02 \x01(\x0b\x32\x19.skein.WatchCancelRequestH\x00\x42\t\n\x07request\"\x9f\x01\n\rWatchResponse\x12\'\n\x04type\x18\x01 \x01(\x0e\x32\x19.skein.WatchResponse.Type\x12\x10\n\x08watch_id\x18\x02 \x01(\x05\x12\x1e\n\x05\x65vent\x18\x03 \x03(\x0b\x32\x0f.skein.KeyValue\"3\n\x04Type\x12\n\n\x06\x43REATE\x10\x00\x12\n\n\x06\x43\x41NCEL\x10\x01\x12\x07\n\x03PUT\x10\x02\x12\n\n\x06\x44\x45LETE\x10\x03\";\n\x11\x43ontainerInstance\x12\x14\n\x0cservice_name\x18\x01 \x01(\t\x12\x10\n\x08instance\x18\x02 \x01(\x05\"M\n\x11\x43ontainersRequest\x12&\n\x06states\x18\x01 \x03(\x0e\x32\x16.skein.Container.State\x12\x10\n\x08services\x18\x02 \x03(\t\":\n\x12\x43ontainersResponse\x12$\n\ncontainers\x18\x01 \x03(\x0b\x32\x10.skein.Container\"B\n\x0cScaleRequest\x12\x14\n\x0cservice_name\x18\x01 \x01(\t\x12\r\n\x05\x63ount\x18\x02 \x01(\x05\x12\r\n\x05\x64\x65lta\x18\x03 \x01(\x05\"\x89\x01\n\x13\x41\x64\x64\x43ontainerRequest\x12\x14\n\x0cservice_name\x18\x01 \x01(\t\x12\x30\n\x03\x65nv\x18\x02 \x03(\x0b\x32#.skein.AddContainerRequest.EnvEntry\x1a*\n\x08\x45nvEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"&\n\x12SetProgressRequest\x12\x10\n\x08progress\x18\x01 \x01(\x02\"9\n\x05Proxy\x12\r\n\x05route\x18\x01 \x01(\t\x12\x11\n\tlink_name\x18\x02 \x01(\t\x12\x0e\n\x06target\x18\x03 \x01(\t\"#\n\x12RemoveProxyRequest\x12\r\n\x05route\x18\x01 \x01(\t\"\x0f\n\rUIInfoRequest\":\n\x0eUIInfoResponse\x12\x12\n\nui_address\x18\x01 \x03(\t\x12\x14\n\x0cproxy_prefix\x18\x02 \x01(\t\"\x13\n\x11GetProxiesRequest\"1\n\x12GetProxiesResponse\x12\x1b\n\x05proxy\x18\x01 \x03(\x0b\x32\x0c.skein.Proxy2\x93\x05\n\x06\x44river\x12\"\n\x04ping\x12\x0c.skein.Empty\x1a\x0c.skein.Empty\x12\x39\n\tgetStatus\x12\x12.skein.Application\x1a\x18.skein.ApplicationReport\x12J\n\x0fgetApplications\x12\x1a.skein.ApplicationsRequest\x1a\x1b.skein.ApplicationsResponse\x12\x35\n\x08getNodes\x12\x13.skein.NodesRequest\x1a\x14.skein.NodesResponse\x12-\n\x08getQueue\x12\x13.skein.QueueRequest\x1a\x0c.skein.Queue\x12<\n\x0egetChildQueues\x12\x13.skein.QueueRequest\x1a\x15.skein.QueuesResponse\x12\x33\n\x0cgetAllQueues\x12\x0c.skein.Empty\x1a\x15.skein.QueuesResponse\x12\x33\n\x0fmoveApplication\x12\x12.skein.MoveRequest\x1a\x0c.skein.Empty\x12\x34\n\x06submit\x12\x16.skein.ApplicationSpec\x1a\x12.skein.Application\x12<\n\x0cwaitForStart\x12\x12.skein.Application\x1a\x18.skein.ApplicationReport\x12(\n\x04kill\x12\x12.skein.KillRequest\x1a\x0c.skein.Empty\x12\x32\n\x07getLogs\x12\x12.skein.LogsRequest\x1a\x13.skein.LogsResponse2\xb9\x07\n\tAppMaster\x12\x30\n\x08shutdown\x12\x16.skein.ShutdownRequest\x1a\x0c.skein.Empty\x12;\n\x08GetRange\x12\x16.skein.GetRangeRequest\x1a\x17.skein.GetRangeResponse\x12\x35\n\x06PutKey\x12\x14.skein.PutKeyRequest\x1a\x15.skein.PutKeyResponse\x12\x44\n\x0b\x44\x65leteRange\x12\x19.skein.DeleteRangeRequest\x1a\x1a.skein.DeleteRangeResponse\x12\x44\n\x0bTransaction\x12\x19.skein.TransactionRequest\x1a\x1a.skein.TransactionResponse\x12\x36\n\x05Watch\x12\x13.skein.WatchRequest\x1a\x14.skein.WatchResponse(\x01\x30\x01\x12:\n\x12getApplicationSpec\x12\x0c.skein.Empty\x1a\x16.skein.ApplicationSpec\x12\x44\n\rgetContainers\x12\x18.skein.ContainersRequest\x1a\x19.skein.ContainersResponse\x12\x37\n\rkillContainer\x12\x18.skein.ContainerInstance\x1a\x0c.skein.Empty\x12\x37\n\x05scale\x12\x13.skein.ScaleRequest\x1a\x19.skein.ContainersResponse\x12<\n\x0c\x61\x64\x64\x43ontainer\x12\x1a.skein.AddContainerRequest\x1a\x10.skein.Container\x12\x36\n\x0bSetProgress\x12\x19.skein.SetProgressRequest\x1a\x0c.skein.Empty\x12&\n\x08\x41\x64\x64Proxy\x12\x0c.skein.Proxy\x1a\x0c.skein.Empty\x12\x36\n\x0bRemoveProxy\x12\x19.skein.RemoveProxyRequest\x1a\x0c.skein.Empty\x12\x35\n\x06UiInfo\x12\x14.skein.UIInfoRequest\x1a\x15.skein.UIInfoResponse\x12\x41\n\nGetProxies\x12\x18.skein.GetProxiesRequest\x1a\x19.skein.GetProxiesResponseB\x1b\n\x12\x63om.anaconda.skeinB\x03MsgH\x03\x62\x06proto3')



_EMPTY = DESCRIPTOR.message_types_by_name['Empty']
_FINALSTATUS = DESCRIPTOR.message_types_by_name['FinalStatus']
_APPLICATIONSTATE = DESCRIPTOR.message_types_by_name['ApplicationState']
_RESOURCES = DESCRIPTOR.message_types_by_name['Resources']
_URL = DESCRIPTOR.message_types_by_name['Url']
_FILE = DESCRIPTOR.message_types_by_name['File']
_SERVICE = DESCRIPTOR.message_types_by_name['Service']
_SERVICE_FILESENTRY = _SERVICE.nested_types_by_name['FilesEntry']
_SERVICE_ENVENTRY = _SERVICE.nested_types_by_name['EnvEntry']
_ACLS = DESCRIPTOR.message_types_by_name['Acls']
_LOG = DESCRIPTOR.message_types_by_name['Log']
_SECURITY = DESCRIPTOR.message_types_by_name['Security']
_MASTER = DESCRIPTOR.message_types_by_name['Master']
_MASTER_FILESENTRY = _MASTER.nested_types_by_name['FilesEntry']
_MASTER_ENVENTRY = _MASTER.nested_types_by_name['EnvEntry']
_APPLICATIONSPEC = DESCRIPTOR.message_types_by_name['ApplicationSpec']
_APPLICATIONSPEC_SERVICESENTRY = _APPLICATIONSPEC.nested_types_by_name['ServicesEntry']
_CONTAINER = DESCRIPTOR.message_types_by_name['Container']
_RESOURCEUSAGEREPORT = DESCRIPTOR.message_types_by_name['ResourceUsageReport']
_APPLICATIONREPORT = DESCRIPTOR.message_types_by_name['ApplicationReport']
_NODESTATE = DESCRIPTOR.message_types_by_name['NodeState']
_NODEREPORT = DESCRIPTOR.message_types_by_name['NodeReport']
_QUEUE = DESCRIPTOR.message_types_by_name['Queue']
_APPLICATION = DESCRIPTOR.message_types_by_name['Application']
_APPLICATIONSREQUEST = DESCRIPTOR.message_types_by_name['ApplicationsRequest']
_APPLICATIONSRESPONSE = DESCRIPTOR.message_types_by_name['ApplicationsResponse']
_NODESREQUEST = DESCRIPTOR.message_types_by_name['NodesRequest']
_NODESRESPONSE = DESCRIPTOR.message_types_by_name['NodesResponse']
_QUEUEREQUEST = DESCRIPTOR.message_types_by_name['QueueRequest']
_QUEUESRESPONSE = DESCRIPTOR.message_types_by_name['QueuesResponse']
_LOGSREQUEST = DESCRIPTOR.message_types_by_name['LogsRequest']
_LOGSRESPONSE = DESCRIPTOR.message_types_by_name['LogsResponse']
_LOGSRESPONSE_LOGSENTRY = _LOGSRESPONSE.nested_types_by_name['LogsEntry']
_MOVEREQUEST = DESCRIPTOR.message_types_by_name['MoveRequest']
_KILLREQUEST = DESCRIPTOR.message_types_by_name['KillRequest']
_SHUTDOWNREQUEST = DESCRIPTOR.message_types_by_name['ShutdownRequest']
_KEYVALUE = DESCRIPTOR.message_types_by_name['KeyValue']
_GETRANGEREQUEST = DESCRIPTOR.message_types_by_name['GetRangeRequest']
_GETRANGERESPONSE = DESCRIPTOR.message_types_by_name['GetRangeResponse']
_PUTKEYREQUEST = DESCRIPTOR.message_types_by_name['PutKeyRequest']
_PUTKEYRESPONSE = DESCRIPTOR.message_types_by_name['PutKeyResponse']
_DELETERANGEREQUEST = DESCRIPTOR.message_types_by_name['DeleteRangeRequest']
_DELETERANGERESPONSE = DESCRIPTOR.message_types_by_name['DeleteRangeResponse']
_CONDITION = DESCRIPTOR.message_types_by_name['Condition']
_OPREQUEST = DESCRIPTOR.message_types_by_name['OpRequest']
_OPRESPONSE = DESCRIPTOR.message_types_by_name['OpResponse']
_TRANSACTIONREQUEST = DESCRIPTOR.message_types_by_name['TransactionRequest']
_TRANSACTIONRESPONSE = DESCRIPTOR.message_types_by_name['TransactionResponse']
_WATCHCREATEREQUEST = DESCRIPTOR.message_types_by_name['WatchCreateRequest']
_WATCHCANCELREQUEST = DESCRIPTOR.message_types_by_name['WatchCancelRequest']
_WATCHREQUEST = DESCRIPTOR.message_types_by_name['WatchRequest']
_WATCHRESPONSE = DESCRIPTOR.message_types_by_name['WatchResponse']
_CONTAINERINSTANCE = DESCRIPTOR.message_types_by_name['ContainerInstance']
_CONTAINERSREQUEST = DESCRIPTOR.message_types_by_name['ContainersRequest']
_CONTAINERSRESPONSE = DESCRIPTOR.message_types_by_name['ContainersResponse']
_SCALEREQUEST = DESCRIPTOR.message_types_by_name['ScaleRequest']
_ADDCONTAINERREQUEST = DESCRIPTOR.message_types_by_name['AddContainerRequest']
_ADDCONTAINERREQUEST_ENVENTRY = _ADDCONTAINERREQUEST.nested_types_by_name['EnvEntry']
_SETPROGRESSREQUEST = DESCRIPTOR.message_types_by_name['SetProgressRequest']
_PROXY = DESCRIPTOR.message_types_by_name['Proxy']
_REMOVEPROXYREQUEST = DESCRIPTOR.message_types_by_name['RemoveProxyRequest']
_UIINFOREQUEST = DESCRIPTOR.message_types_by_name['UIInfoRequest']
_UIINFORESPONSE = DESCRIPTOR.message_types_by_name['UIInfoResponse']
_GETPROXIESREQUEST = DESCRIPTOR.message_types_by_name['GetProxiesRequest']
_GETPROXIESRESPONSE = DESCRIPTOR.message_types_by_name['GetProxiesResponse']
_FINALSTATUS_TYPE = _FINALSTATUS.enum_types_by_name['Type']
_APPLICATIONSTATE_TYPE = _APPLICATIONSTATE.enum_types_by_name['Type']
_FILE_TYPE = _FILE.enum_types_by_name['Type']
_FILE_VISIBILITY = _FILE.enum_types_by_name['Visibility']
_LOG_LEVEL = _LOG.enum_types_by_name['Level']
_CONTAINER_STATE = _CONTAINER.enum_types_by_name['State']
_NODESTATE_TYPE = _NODESTATE.enum_types_by_name['Type']
_QUEUE_STATE = _QUEUE.enum_types_by_name['State']
_GETRANGEREQUEST_RESULTTYPE = _GETRANGEREQUEST.enum_types_by_name['ResultType']
_DELETERANGEREQUEST_RESULTTYPE = _DELETERANGEREQUEST.enum_types_by_name['ResultType']
_CONDITION_OPERATOR = _CONDITION.enum_types_by_name['Operator']
_CONDITION_FIELD = _CONDITION.enum_types_by_name['Field']
_WATCHCREATEREQUEST_TYPE = _WATCHCREATEREQUEST.enum_types_by_name['Type']
_WATCHRESPONSE_TYPE = _WATCHRESPONSE.enum_types_by_name['Type']
Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), {
  'DESCRIPTOR' : _EMPTY,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.Empty)
  })
_sym_db.RegisterMessage(Empty)

FinalStatus = _reflection.GeneratedProtocolMessageType('FinalStatus', (_message.Message,), {
  'DESCRIPTOR' : _FINALSTATUS,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.FinalStatus)
  })
_sym_db.RegisterMessage(FinalStatus)

ApplicationState = _reflection.GeneratedProtocolMessageType('ApplicationState', (_message.Message,), {
  'DESCRIPTOR' : _APPLICATIONSTATE,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.ApplicationState)
  })
_sym_db.RegisterMessage(ApplicationState)

Resources = _reflection.GeneratedProtocolMessageType('Resources', (_message.Message,), {
  'DESCRIPTOR' : _RESOURCES,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.Resources)
  })
_sym_db.RegisterMessage(Resources)

Url = _reflection.GeneratedProtocolMessageType('Url', (_message.Message,), {
  'DESCRIPTOR' : _URL,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.Url)
  })
_sym_db.RegisterMessage(Url)

File = _reflection.GeneratedProtocolMessageType('File', (_message.Message,), {
  'DESCRIPTOR' : _FILE,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.File)
  })
_sym_db.RegisterMessage(File)

Service = _reflection.GeneratedProtocolMessageType('Service', (_message.Message,), {

  'FilesEntry' : _reflection.GeneratedProtocolMessageType('FilesEntry', (_message.Message,), {
    'DESCRIPTOR' : _SERVICE_FILESENTRY,
    '__module__' : 'skein_pb2'
    # @@protoc_insertion_point(class_scope:skein.Service.FilesEntry)
    })
  ,

  'EnvEntry' : _reflection.GeneratedProtocolMessageType('EnvEntry', (_message.Message,), {
    'DESCRIPTOR' : _SERVICE_ENVENTRY,
    '__module__' : 'skein_pb2'
    # @@protoc_insertion_point(class_scope:skein.Service.EnvEntry)
    })
  ,
  'DESCRIPTOR' : _SERVICE,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.Service)
  })
_sym_db.RegisterMessage(Service)
_sym_db.RegisterMessage(Service.FilesEntry)
_sym_db.RegisterMessage(Service.EnvEntry)

Acls = _reflection.GeneratedProtocolMessageType('Acls', (_message.Message,), {
  'DESCRIPTOR' : _ACLS,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.Acls)
  })
_sym_db.RegisterMessage(Acls)

Log = _reflection.GeneratedProtocolMessageType('Log', (_message.Message,), {
  'DESCRIPTOR' : _LOG,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.Log)
  })
_sym_db.RegisterMessage(Log)

Security = _reflection.GeneratedProtocolMessageType('Security', (_message.Message,), {
  'DESCRIPTOR' : _SECURITY,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.Security)
  })
_sym_db.RegisterMessage(Security)

Master = _reflection.GeneratedProtocolMessageType('Master', (_message.Message,), {

  'FilesEntry' : _reflection.GeneratedProtocolMessageType('FilesEntry', (_message.Message,), {
    'DESCRIPTOR' : _MASTER_FILESENTRY,
    '__module__' : 'skein_pb2'
    # @@protoc_insertion_point(class_scope:skein.Master.FilesEntry)
    })
  ,

  'EnvEntry' : _reflection.GeneratedProtocolMessageType('EnvEntry', (_message.Message,), {
    'DESCRIPTOR' : _MASTER_ENVENTRY,
    '__module__' : 'skein_pb2'
    # @@protoc_insertion_point(class_scope:skein.Master.EnvEntry)
    })
  ,
  'DESCRIPTOR' : _MASTER,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.Master)
  })
_sym_db.RegisterMessage(Master)
_sym_db.RegisterMessage(Master.FilesEntry)
_sym_db.RegisterMessage(Master.EnvEntry)

ApplicationSpec = _reflection.GeneratedProtocolMessageType('ApplicationSpec', (_message.Message,), {

  'ServicesEntry' : _reflection.GeneratedProtocolMessageType('ServicesEntry', (_message.Message,), {
    'DESCRIPTOR' : _APPLICATIONSPEC_SERVICESENTRY,
    '__module__' : 'skein_pb2'
    # @@protoc_insertion_point(class_scope:skein.ApplicationSpec.ServicesEntry)
    })
  ,
  'DESCRIPTOR' : _APPLICATIONSPEC,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.ApplicationSpec)
  })
_sym_db.RegisterMessage(ApplicationSpec)
_sym_db.RegisterMessage(ApplicationSpec.ServicesEntry)

Container = _reflection.GeneratedProtocolMessageType('Container', (_message.Message,), {
  'DESCRIPTOR' : _CONTAINER,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.Container)
  })
_sym_db.RegisterMessage(Container)

ResourceUsageReport = _reflection.GeneratedProtocolMessageType('ResourceUsageReport', (_message.Message,), {
  'DESCRIPTOR' : _RESOURCEUSAGEREPORT,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.ResourceUsageReport)
  })
_sym_db.RegisterMessage(ResourceUsageReport)

ApplicationReport = _reflection.GeneratedProtocolMessageType('ApplicationReport', (_message.Message,), {
  'DESCRIPTOR' : _APPLICATIONREPORT,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.ApplicationReport)
  })
_sym_db.RegisterMessage(ApplicationReport)

NodeState = _reflection.GeneratedProtocolMessageType('NodeState', (_message.Message,), {
  'DESCRIPTOR' : _NODESTATE,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.NodeState)
  })
_sym_db.RegisterMessage(NodeState)

NodeReport = _reflection.GeneratedProtocolMessageType('NodeReport', (_message.Message,), {
  'DESCRIPTOR' : _NODEREPORT,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.NodeReport)
  })
_sym_db.RegisterMessage(NodeReport)

Queue = _reflection.GeneratedProtocolMessageType('Queue', (_message.Message,), {
  'DESCRIPTOR' : _QUEUE,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.Queue)
  })
_sym_db.RegisterMessage(Queue)

Application = _reflection.GeneratedProtocolMessageType('Application', (_message.Message,), {
  'DESCRIPTOR' : _APPLICATION,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.Application)
  })
_sym_db.RegisterMessage(Application)

ApplicationsRequest = _reflection.GeneratedProtocolMessageType('ApplicationsRequest', (_message.Message,), {
  'DESCRIPTOR' : _APPLICATIONSREQUEST,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.ApplicationsRequest)
  })
_sym_db.RegisterMessage(ApplicationsRequest)

ApplicationsResponse = _reflection.GeneratedProtocolMessageType('ApplicationsResponse', (_message.Message,), {
  'DESCRIPTOR' : _APPLICATIONSRESPONSE,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.ApplicationsResponse)
  })
_sym_db.RegisterMessage(ApplicationsResponse)

NodesRequest = _reflection.GeneratedProtocolMessageType('NodesRequest', (_message.Message,), {
  'DESCRIPTOR' : _NODESREQUEST,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.NodesRequest)
  })
_sym_db.RegisterMessage(NodesRequest)

NodesResponse = _reflection.GeneratedProtocolMessageType('NodesResponse', (_message.Message,), {
  'DESCRIPTOR' : _NODESRESPONSE,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.NodesResponse)
  })
_sym_db.RegisterMessage(NodesResponse)

QueueRequest = _reflection.GeneratedProtocolMessageType('QueueRequest', (_message.Message,), {
  'DESCRIPTOR' : _QUEUEREQUEST,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.QueueRequest)
  })
_sym_db.RegisterMessage(QueueRequest)

QueuesResponse = _reflection.GeneratedProtocolMessageType('QueuesResponse', (_message.Message,), {
  'DESCRIPTOR' : _QUEUESRESPONSE,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.QueuesResponse)
  })
_sym_db.RegisterMessage(QueuesResponse)

LogsRequest = _reflection.GeneratedProtocolMessageType('LogsRequest', (_message.Message,), {
  'DESCRIPTOR' : _LOGSREQUEST,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.LogsRequest)
  })
_sym_db.RegisterMessage(LogsRequest)

LogsResponse = _reflection.GeneratedProtocolMessageType('LogsResponse', (_message.Message,), {

  'LogsEntry' : _reflection.GeneratedProtocolMessageType('LogsEntry', (_message.Message,), {
    'DESCRIPTOR' : _LOGSRESPONSE_LOGSENTRY,
    '__module__' : 'skein_pb2'
    # @@protoc_insertion_point(class_scope:skein.LogsResponse.LogsEntry)
    })
  ,
  'DESCRIPTOR' : _LOGSRESPONSE,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.LogsResponse)
  })
_sym_db.RegisterMessage(LogsResponse)
_sym_db.RegisterMessage(LogsResponse.LogsEntry)

MoveRequest = _reflection.GeneratedProtocolMessageType('MoveRequest', (_message.Message,), {
  'DESCRIPTOR' : _MOVEREQUEST,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.MoveRequest)
  })
_sym_db.RegisterMessage(MoveRequest)

KillRequest = _reflection.GeneratedProtocolMessageType('KillRequest', (_message.Message,), {
  'DESCRIPTOR' : _KILLREQUEST,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.KillRequest)
  })
_sym_db.RegisterMessage(KillRequest)

ShutdownRequest = _reflection.GeneratedProtocolMessageType('ShutdownRequest', (_message.Message,), {
  'DESCRIPTOR' : _SHUTDOWNREQUEST,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.ShutdownRequest)
  })
_sym_db.RegisterMessage(ShutdownRequest)

KeyValue = _reflection.GeneratedProtocolMessageType('KeyValue', (_message.Message,), {
  'DESCRIPTOR' : _KEYVALUE,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.KeyValue)
  })
_sym_db.RegisterMessage(KeyValue)

GetRangeRequest = _reflection.GeneratedProtocolMessageType('GetRangeRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETRANGEREQUEST,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.GetRangeRequest)
  })
_sym_db.RegisterMessage(GetRangeRequest)

GetRangeResponse = _reflection.GeneratedProtocolMessageType('GetRangeResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETRANGERESPONSE,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.GetRangeResponse)
  })
_sym_db.RegisterMessage(GetRangeResponse)

PutKeyRequest = _reflection.GeneratedProtocolMessageType('PutKeyRequest', (_message.Message,), {
  'DESCRIPTOR' : _PUTKEYREQUEST,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.PutKeyRequest)
  })
_sym_db.RegisterMessage(PutKeyRequest)

PutKeyResponse = _reflection.GeneratedProtocolMessageType('PutKeyResponse', (_message.Message,), {
  'DESCRIPTOR' : _PUTKEYRESPONSE,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.PutKeyResponse)
  })
_sym_db.RegisterMessage(PutKeyResponse)

DeleteRangeRequest = _reflection.GeneratedProtocolMessageType('DeleteRangeRequest', (_message.Message,), {
  'DESCRIPTOR' : _DELETERANGEREQUEST,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.DeleteRangeRequest)
  })
_sym_db.RegisterMessage(DeleteRangeRequest)

DeleteRangeResponse = _reflection.GeneratedProtocolMessageType('DeleteRangeResponse', (_message.Message,), {
  'DESCRIPTOR' : _DELETERANGERESPONSE,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.DeleteRangeResponse)
  })
_sym_db.RegisterMessage(DeleteRangeResponse)

Condition = _reflection.GeneratedProtocolMessageType('Condition', (_message.Message,), {
  'DESCRIPTOR' : _CONDITION,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.Condition)
  })
_sym_db.RegisterMessage(Condition)

OpRequest = _reflection.GeneratedProtocolMessageType('OpRequest', (_message.Message,), {
  'DESCRIPTOR' : _OPREQUEST,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.OpRequest)
  })
_sym_db.RegisterMessage(OpRequest)

OpResponse = _reflection.GeneratedProtocolMessageType('OpResponse', (_message.Message,), {
  'DESCRIPTOR' : _OPRESPONSE,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.OpResponse)
  })
_sym_db.RegisterMessage(OpResponse)

TransactionRequest = _reflection.GeneratedProtocolMessageType('TransactionRequest', (_message.Message,), {
  'DESCRIPTOR' : _TRANSACTIONREQUEST,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.TransactionRequest)
  })
_sym_db.RegisterMessage(TransactionRequest)

TransactionResponse = _reflection.GeneratedProtocolMessageType('TransactionResponse', (_message.Message,), {
  'DESCRIPTOR' : _TRANSACTIONRESPONSE,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.TransactionResponse)
  })
_sym_db.RegisterMessage(TransactionResponse)

WatchCreateRequest = _reflection.GeneratedProtocolMessageType('WatchCreateRequest', (_message.Message,), {
  'DESCRIPTOR' : _WATCHCREATEREQUEST,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.WatchCreateRequest)
  })
_sym_db.RegisterMessage(WatchCreateRequest)

WatchCancelRequest = _reflection.GeneratedProtocolMessageType('WatchCancelRequest', (_message.Message,), {
  'DESCRIPTOR' : _WATCHCANCELREQUEST,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.WatchCancelRequest)
  })
_sym_db.RegisterMessage(WatchCancelRequest)

WatchRequest = _reflection.GeneratedProtocolMessageType('WatchRequest', (_message.Message,), {
  'DESCRIPTOR' : _WATCHREQUEST,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.WatchRequest)
  })
_sym_db.RegisterMessage(WatchRequest)

WatchResponse = _reflection.GeneratedProtocolMessageType('WatchResponse', (_message.Message,), {
  'DESCRIPTOR' : _WATCHRESPONSE,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.WatchResponse)
  })
_sym_db.RegisterMessage(WatchResponse)

ContainerInstance = _reflection.GeneratedProtocolMessageType('ContainerInstance', (_message.Message,), {
  'DESCRIPTOR' : _CONTAINERINSTANCE,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.ContainerInstance)
  })
_sym_db.RegisterMessage(ContainerInstance)

ContainersRequest = _reflection.GeneratedProtocolMessageType('ContainersRequest', (_message.Message,), {
  'DESCRIPTOR' : _CONTAINERSREQUEST,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.ContainersRequest)
  })
_sym_db.RegisterMessage(ContainersRequest)

ContainersResponse = _reflection.GeneratedProtocolMessageType('ContainersResponse', (_message.Message,), {
  'DESCRIPTOR' : _CONTAINERSRESPONSE,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.ContainersResponse)
  })
_sym_db.RegisterMessage(ContainersResponse)

ScaleRequest = _reflection.GeneratedProtocolMessageType('ScaleRequest', (_message.Message,), {
  'DESCRIPTOR' : _SCALEREQUEST,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.ScaleRequest)
  })
_sym_db.RegisterMessage(ScaleRequest)

AddContainerRequest = _reflection.GeneratedProtocolMessageType('AddContainerRequest', (_message.Message,), {

  'EnvEntry' : _reflection.GeneratedProtocolMessageType('EnvEntry', (_message.Message,), {
    'DESCRIPTOR' : _ADDCONTAINERREQUEST_ENVENTRY,
    '__module__' : 'skein_pb2'
    # @@protoc_insertion_point(class_scope:skein.AddContainerRequest.EnvEntry)
    })
  ,
  'DESCRIPTOR' : _ADDCONTAINERREQUEST,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.AddContainerRequest)
  })
_sym_db.RegisterMessage(AddContainerRequest)
_sym_db.RegisterMessage(AddContainerRequest.EnvEntry)

SetProgressRequest = _reflection.GeneratedProtocolMessageType('SetProgressRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETPROGRESSREQUEST,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.SetProgressRequest)
  })
_sym_db.RegisterMessage(SetProgressRequest)

Proxy = _reflection.GeneratedProtocolMessageType('Proxy', (_message.Message,), {
  'DESCRIPTOR' : _PROXY,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.Proxy)
  })
_sym_db.RegisterMessage(Proxy)

RemoveProxyRequest = _reflection.GeneratedProtocolMessageType('RemoveProxyRequest', (_message.Message,), {
  'DESCRIPTOR' : _REMOVEPROXYREQUEST,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.RemoveProxyRequest)
  })
_sym_db.RegisterMessage(RemoveProxyRequest)

UIInfoRequest = _reflection.GeneratedProtocolMessageType('UIInfoRequest', (_message.Message,), {
  'DESCRIPTOR' : _UIINFOREQUEST,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.UIInfoRequest)
  })
_sym_db.RegisterMessage(UIInfoRequest)

UIInfoResponse = _reflection.GeneratedProtocolMessageType('UIInfoResponse', (_message.Message,), {
  'DESCRIPTOR' : _UIINFORESPONSE,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.UIInfoResponse)
  })
_sym_db.RegisterMessage(UIInfoResponse)

GetProxiesRequest = _reflection.GeneratedProtocolMessageType('GetProxiesRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETPROXIESREQUEST,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.GetProxiesRequest)
  })
_sym_db.RegisterMessage(GetProxiesRequest)

GetProxiesResponse = _reflection.GeneratedProtocolMessageType('GetProxiesResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETPROXIESRESPONSE,
  '__module__' : 'skein_pb2'
  # @@protoc_insertion_point(class_scope:skein.GetProxiesResponse)
  })
_sym_db.RegisterMessage(GetProxiesResponse)

_DRIVER = DESCRIPTOR.services_by_name['Driver']
_APPMASTER = DESCRIPTOR.services_by_name['AppMaster']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\022com.anaconda.skeinB\003MsgH\003'
  _SERVICE_FILESENTRY._options = None
  _SERVICE_FILESENTRY._serialized_options = b'8\001'
  _SERVICE_ENVENTRY._options = None
  _SERVICE_ENVENTRY._serialized_options = b'8\001'
  _MASTER_FILESENTRY._options = None
  _MASTER_FILESENTRY._serialized_options = b'8\001'
  _MASTER_ENVENTRY._options = None
  _MASTER_ENVENTRY._serialized_options = b'8\001'
  _APPLICATIONSPEC_SERVICESENTRY._options = None
  _APPLICATIONSPEC_SERVICESENTRY._serialized_options = b'8\001'
  _LOGSRESPONSE_LOGSENTRY._options = None
  _LOGSRESPONSE_LOGSENTRY._serialized_options = b'8\001'
  _ADDCONTAINERREQUEST_ENVENTRY._options = None
  _ADDCONTAINERREQUEST_ENVENTRY._serialized_options = b'8\001'
  _EMPTY._serialized_start=22
  _EMPTY._serialized_end=29
  _FINALSTATUS._serialized_start=31
  _FINALSTATUS._serialized_end=106
  _FINALSTATUS_TYPE._serialized_start=46
  _FINALSTATUS_TYPE._serialized_end=106
  _APPLICATIONSTATE._serialized_start=109
  _APPLICATIONSTATE._serialized_end=240
  _APPLICATIONSTATE_TYPE._serialized_start=129
  _APPLICATIONSTATE_TYPE._serialized_end=240
  _RESOURCES._serialized_start=242
  _RESOURCES._serialized_end=314
  _URL._serialized_start=316
  _URL._serialized_end=379
  _FILE._serialized_start=382
  _FILE._serialized_end=612
  _FILE_TYPE._serialized_start=527
  _FILE_TYPE._serialized_end=556
  _FILE_VISIBILITY._serialized_start=558
  _FILE_VISIBILITY._serialized_end=612
  _SERVICE._serialized_start=615
  _SERVICE._serialized_end=1016
  _SERVICE_FILESENTRY._serialized_start=915
  _SERVICE_FILESENTRY._serialized_end=972
  _SERVICE_ENVENTRY._serialized_start=974
  _SERVICE_ENVENTRY._serialized_end=1016
  _ACLS._serialized_start=1018
  _ACLS._serialized_end=1144
  _LOG._serialized_start=1146
  _LOG._serialized_end=1242
  _LOG_LEVEL._serialized_start=1153
  _LOG_LEVEL._serialized_end=1242
  _SECURITY._serialized_start=1245
  _SECURITY._serialized_end=1380
  _MASTER._serialized_start=1383
  _MASTER._serialized_end=1730
  _MASTER_FILESENTRY._serialized_start=915
  _MASTER_FILESENTRY._serialized_end=972
  _MASTER_ENVENTRY._serialized_start=974
  _MASTER_ENVENTRY._serialized_end=1016
  _APPLICATIONSPEC._serialized_start=1733
  _APPLICATIONSPEC._serialized_end=2050
  _APPLICATIONSPEC_SERVICESENTRY._serialized_start=1987
  _APPLICATIONSPEC_SERVICESENTRY._serialized_end=2050
  _CONTAINER._serialized_start=2053
  _CONTAINER._serialized_end=2354
  _CONTAINER_STATE._serialized_start=2267
  _CONTAINER_STATE._serialized_end=2354
  _RESOURCEUSAGEREPORT._serialized_start=2357
  _RESOURCEUSAGEREPORT._serialized_end=2586
  _APPLICATIONREPORT._serialized_start=2589
  _APPLICATIONREPORT._serialized_end=2942
  _NODESTATE._serialized_start=2945
  _NODESTATE._serialized_end=3080
  _NODESTATE_TYPE._serialized_start=2958
  _NODESTATE_TYPE._serialized_end=3080
  _NODEREPORT._serialized_start=3083
  _NODEREPORT._serialized_end=3310
  _QUEUE._serialized_start=3313
  _QUEUE._serialized_end=3515
  _QUEUE_STATE._serialized_start=3482
  _QUEUE_STATE._serialized_end=3515
  _APPLICATION._serialized_start=3517
  _APPLICATION._serialized_end=3542
  _APPLICATIONSREQUEST._serialized_start=3545
  _APPLICATIONSREQUEST._serialized_end=3745
  _APPLICATIONSRESPONSE._serialized_start=3747
  _APPLICATIONSRESPONSE._serialized_end=3812
  _NODESREQUEST._serialized_start=3814
  _NODESREQUEST._serialized_end=3867
  _NODESRESPONSE._serialized_start=3869
  _NODESRESPONSE._serialized_end=3920
  _QUEUEREQUEST._serialized_start=3922
  _QUEUEREQUEST._serialized_end=3950
  _QUEUESRESPONSE._serialized_start=3952
  _QUEUESRESPONSE._serialized_end=3998
  _LOGSREQUEST._serialized_start=4000
  _LOGSREQUEST._serialized_end=4039
  _LOGSRESPONSE._serialized_start=4041
  _LOGSRESPONSE._serialized_end=4145
  _LOGSRESPONSE_LOGSENTRY._serialized_start=4102
  _LOGSRESPONSE_LOGSENTRY._serialized_end=4145
  _MOVEREQUEST._serialized_start=4147
  _MOVEREQUEST._serialized_end=4187
  _KILLREQUEST._serialized_start=4189
  _KILLREQUEST._serialized_end=4228
  _SHUTDOWNREQUEST._serialized_start=4230
  _SHUTDOWNREQUEST._serialized_end=4315
  _KEYVALUE._serialized_start=4317
  _KEYVALUE._serialized_end=4396
  _GETRANGEREQUEST._serialized_start=4399
  _GETRANGEREQUEST._serialized_end=4545
  _GETRANGEREQUEST_RESULTTYPE._serialized_start=4502
  _GETRANGEREQUEST_RESULTTYPE._serialized_end=4545
  _GETRANGERESPONSE._serialized_start=4547
  _GETRANGERESPONSE._serialized_end=4669
  _PUTKEYREQUEST._serialized_start=4672
  _PUTKEYREQUEST._serialized_end=4825
  _PUTKEYRESPONSE._serialized_start=4827
  _PUTKEYRESPONSE._serialized_end=4903
  _DELETERANGEREQUEST._serialized_start=4906
  _DELETERANGEREQUEST._serialized_end=5058
  _DELETERANGEREQUEST_RESULTTYPE._serialized_start=5015
  _DELETERANGEREQUEST_RESULTTYPE._serialized_end=5058
  _DELETERANGERESPONSE._serialized_start=5061
  _DELETERANGERESPONSE._serialized_end=5189
  _CONDITION._serialized_start=5192
  _CONDITION._serialized_end=5494
  _CONDITION_OPERATOR._serialized_start=5362
  _CONDITION_OPERATOR._serialized_end=5456
  _CONDITION_FIELD._serialized_start=5458
  _CONDITION_FIELD._serialized_end=5487
  _OPREQUEST._serialized_start=5497
  _OPREQUEST._serialized_end=5656
  _OPRESPONSE._serialized_start=5659
  _OPRESPONSE._serialized_end=5823
  _TRANSACTIONREQUEST._serialized_start=5826
  _TRANSACTIONREQUEST._serialized_end=5959
  _TRANSACTIONRESPONSE._serialized_start=5961
  _TRANSACTIONRESPONSE._serialized_end=6036
  _WATCHCREATEREQUEST._serialized_start=6039
  _WATCHCREATEREQUEST._serialized_end=6177
  _WATCHCREATEREQUEST_TYPE._serialized_start=6141
  _WATCHCREATEREQUEST_TYPE._serialized_end=6177
  _WATCHCANCELREQUEST._serialized_start=6179
  _WATCHCANCELREQUEST._serialized_end=6217
  _WATCHREQUEST._serialized_start=6219
  _WATCHREQUEST._serialized_end=6334
  _WATCHRESPONSE._serialized_start=6337
  _WATCHRESPONSE._serialized_end=6496
  _WATCHRESPONSE_TYPE._serialized_start=6445
  _WATCHRESPONSE_TYPE._serialized_end=6496
  _CONTAINERINSTANCE._serialized_start=6498
  _CONTAINERINSTANCE._serialized_end=6557
  _CONTAINERSREQUEST._serialized_start=6559
  _CONTAINERSREQUEST._serialized_end=6636
  _CONTAINERSRESPONSE._serialized_start=6638
  _CONTAINERSRESPONSE._serialized_end=6696
  _SCALEREQUEST._serialized_start=6698
  _SCALEREQUEST._serialized_end=6764
  _ADDCONTAINERREQUEST._serialized_start=6767
  _ADDCONTAINERREQUEST._serialized_end=6904
  _ADDCONTAINERREQUEST_ENVENTRY._serialized_start=974
  _ADDCONTAINERREQUEST_ENVENTRY._serialized_end=1016
  _SETPROGRESSREQUEST._serialized_start=6906
  _SETPROGRESSREQUEST._serialized_end=6944
  _PROXY._serialized_start=6946
  _PROXY._serialized_end=7003
  _REMOVEPROXYREQUEST._serialized_start=7005
  _REMOVEPROXYREQUEST._serialized_end=7040
  _UIINFOREQUEST._serialized_start=7042
  _UIINFOREQUEST._serialized_end=7057
  _UIINFORESPONSE._serialized_start=7059
  _UIINFORESPONSE._serialized_end=7117
  _GETPROXIESREQUEST._serialized_start=7119
  _GETPROXIESREQUEST._serialized_end=7138
  _GETPROXIESRESPONSE._serialized_start=7140
  _GETPROXIESRESPONSE._serialized_end=7189
  _DRIVER._serialized_start=7192
  _DRIVER._serialized_end=7851
  _APPMASTER._serialized_start=7854
  _APPMASTER._serialized_end=8807
# @@protoc_insertion_point(module_scope)
