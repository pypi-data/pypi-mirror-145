# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: freem_protocols/freem_box/audio.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n%freem_protocols/freem_box/audio.proto\x12\x0f\x66reem_box.audio\"\xf2\x04\n\x0bStateChange\x12\x35\n\told_state\x18\x01 \x01(\x0e\x32\".freem_box.audio.StateChange.State\x12\x35\n\tnew_state\x18\x02 \x01(\x0e\x32\".freem_box.audio.StateChange.State\x12\x14\n\x0cmin_progress\x18\x03 \x01(\x04\x12\x14\n\x0cmax_progress\x18\x04 \x01(\x04\x12\x14\n\x0cnew_progress\x18\x05 \x01(\x04\x12\x15\n\rerror_message\x18\x06 \x01(\t\"\x9b\x03\n\x05State\x12\x08\n\x04IDLE\x10\x00\x12\x0b\n\x07\x45RRORED\x10\x01\x12\x15\n\x11SEARCHING_SPOTIFY\x10\x02\x12\x1a\n\x16SEARCHICH_SPOTIFY_DONE\x10\x03\x12\x15\n\x11SEARCHING_YOUTUBE\x10\x04\x12\x1a\n\x16SEARCHING_YOUTUBE_DONE\x10\x05\x12\x1d\n\x19\x46\x45TCHING_SPOTIFY_ANALYSIS\x10\x06\x12\"\n\x1e\x46\x45TCHING_SPOTIFY_ANALYSIS_DONE\x10\x07\x12\x1a\n\x16\x46\x45TCHING_YOUTUBE_AUDIO\x10\x08\x12\x1f\n\x1b\x46\x45TCHING_YOUTUBE_AUDIO_DONE\x10\t\x12\x14\n\x10\x45NGINE_ANALYZING\x10\n\x12\x19\n\x15\x45NGINE_ANALYZING_DONE\x10\x0b\x12\x0f\n\x0bTRANSCODING\x10\x0c\x12\x14\n\x10TRANSCODING_DONE\x10\r\x12\x1a\n\x16STREAMING_INITIALIZING\x10\x0e\x12\r\n\tSTREAMING\x10\x0f\x12\x12\n\x0eSTREAMING_DONE\x10\x10\"a\n\x13\x41rbitraryAudioChunk\x12\x19\n\x11total_chunk_count\x18\x01 \x01(\x04\x12\x1b\n\x13\x63urrent_chunk_index\x18\x02 \x01(\x04\x12\x12\n\ndata_bytes\x18\x03 \x01(\x0c\"g\n\x0eRIFFWAVEHeader\x12\x15\n\rchannel_count\x18\x01 \x01(\r\x12\x13\n\x0bsample_rate\x18\x02 \x01(\r\x12\x13\n\x0bsample_size\x18\x03 \x01(\r\x12\x14\n\x0csample_count\x18\x04 \x01(\x04\"D\n\rRIFFWAVEChunk\x12\x33\n\x05\x63hunk\x18\x01 \x01(\x0b\x32$.freem_box.audio.ArbitraryAudioChunk\"&\n\nOpusHeader\x12\x18\n\x10is_discord_ready\x18\x01 \x01(\x08\"@\n\tOpusChunk\x12\x33\n\x05\x63hunk\x18\x01 \x01(\x0b\x32$.freem_box.audio.ArbitraryAudioChunk\"\xa5\x01\n\x17\x44iscordRadioStreamChunk\x12+\n\x06header\x18\x01 \x01(\x0b\x32\x1b.freem_box.audio.OpusHeader\x12)\n\x05\x63hunk\x18\x02 \x01(\x0b\x32\x1a.freem_box.audio.OpusChunk\x12\x32\n\x0cstate_change\x18\x03 \x01(\x0b\x32\x1c.freem_box.audio.StateChange\"\xab\x01\n\x13StreamingParameters\x12\x11\n\tthreshold\x18\x02 \x01(\x02\x12\x13\n\x0b\x62ound_lower\x18\x03 \x01(\x02\x12\x14\n\x0c\x62ound_higher\x18\x04 \x01(\x02\x12\x15\n\rramp_up_speed\x18\x05 \x01(\x02\x12\x14\n\x0conly_reverse\x18\x06 \x01(\x08\x12\x11\n\tonly_long\x18\x07 \x01(\x08\x12\x16\n\x0e\x65xternal_audio\x18\x08 \x01(\t\"a\n\x19\x44iscordRadioStreamRequest\x12\n\n\x02id\x18\x01 \x01(\t\x12\x38\n\nparameters\x18\x02 \x01(\x0b\x32$.freem_box.audio.StreamingParameters\"V\n\x1a\x44iscordRadioStreamResponse\x12\x38\n\x06\x63hunks\x18\x01 \x03(\x0b\x32(.freem_box.audio.DiscordRadioStreamChunk\"+\n\x1dYoutubeUrlForSpotifyIDRequest\x12\n\n\x02id\x18\x01 \x01(\t\"-\n\x1eYoutubeUrlForSpotifyIDResponse\x12\x0b\n\x03url\x18\x01 \x01(\t\"&\n\x17YoutubeAudioDataRequest\x12\x0b\n\x03url\x18\x01 \x01(\t\"\x85\x01\n\x18YoutubeAudioDataResponse\x12\x33\n\x05\x63hunk\x18\x01 \x01(\x0b\x32$.freem_box.audio.ArbitraryAudioChunk\x12\x34\n\x05\x65rror\x18\x02 \x01(\x0e\x32%.freem_box.audio.YoutubeFailureReason*X\n\x14YoutubeFailureReason\x12\x08\n\x04NONE\x10\x00\x12\r\n\tNOT_FOUND\x10\x01\x12\x10\n\x0c\x41PI_REJECTED\x10\x02\x12\x15\n\x11TRANSPORT_FAILURE\x10\x03\x32\xeb\x02\n\x0c\x41udioService\x12q\n\x12StreamDiscordRadio\x12*.freem_box.audio.DiscordRadioStreamRequest\x1a+.freem_box.audio.DiscordRadioStreamResponse\"\x00\x30\x01\x12{\n\x16YoutubeUrlForSpotifyID\x12..freem_box.audio.YoutubeUrlForSpotifyIDRequest\x1a/.freem_box.audio.YoutubeUrlForSpotifyIDResponse\"\x00\x12k\n\x10YoutubeAudioData\x12(.freem_box.audio.YoutubeAudioDataRequest\x1a).freem_box.audio.YoutubeAudioDataResponse\"\x00\x30\x01\x62\x06proto3')

_YOUTUBEFAILUREREASON = DESCRIPTOR.enum_types_by_name['YoutubeFailureReason']
YoutubeFailureReason = enum_type_wrapper.EnumTypeWrapper(_YOUTUBEFAILUREREASON)
NONE = 0
NOT_FOUND = 1
API_REJECTED = 2
TRANSPORT_FAILURE = 3


_STATECHANGE = DESCRIPTOR.message_types_by_name['StateChange']
_ARBITRARYAUDIOCHUNK = DESCRIPTOR.message_types_by_name['ArbitraryAudioChunk']
_RIFFWAVEHEADER = DESCRIPTOR.message_types_by_name['RIFFWAVEHeader']
_RIFFWAVECHUNK = DESCRIPTOR.message_types_by_name['RIFFWAVEChunk']
_OPUSHEADER = DESCRIPTOR.message_types_by_name['OpusHeader']
_OPUSCHUNK = DESCRIPTOR.message_types_by_name['OpusChunk']
_DISCORDRADIOSTREAMCHUNK = DESCRIPTOR.message_types_by_name['DiscordRadioStreamChunk']
_STREAMINGPARAMETERS = DESCRIPTOR.message_types_by_name['StreamingParameters']
_DISCORDRADIOSTREAMREQUEST = DESCRIPTOR.message_types_by_name['DiscordRadioStreamRequest']
_DISCORDRADIOSTREAMRESPONSE = DESCRIPTOR.message_types_by_name['DiscordRadioStreamResponse']
_YOUTUBEURLFORSPOTIFYIDREQUEST = DESCRIPTOR.message_types_by_name['YoutubeUrlForSpotifyIDRequest']
_YOUTUBEURLFORSPOTIFYIDRESPONSE = DESCRIPTOR.message_types_by_name['YoutubeUrlForSpotifyIDResponse']
_YOUTUBEAUDIODATAREQUEST = DESCRIPTOR.message_types_by_name['YoutubeAudioDataRequest']
_YOUTUBEAUDIODATARESPONSE = DESCRIPTOR.message_types_by_name['YoutubeAudioDataResponse']
_STATECHANGE_STATE = _STATECHANGE.enum_types_by_name['State']
StateChange = _reflection.GeneratedProtocolMessageType('StateChange', (_message.Message,), {
  'DESCRIPTOR' : _STATECHANGE,
  '__module__' : 'freem_protocols.freem_box.audio_pb2'
  # @@protoc_insertion_point(class_scope:freem_box.audio.StateChange)
  })
_sym_db.RegisterMessage(StateChange)

ArbitraryAudioChunk = _reflection.GeneratedProtocolMessageType('ArbitraryAudioChunk', (_message.Message,), {
  'DESCRIPTOR' : _ARBITRARYAUDIOCHUNK,
  '__module__' : 'freem_protocols.freem_box.audio_pb2'
  # @@protoc_insertion_point(class_scope:freem_box.audio.ArbitraryAudioChunk)
  })
_sym_db.RegisterMessage(ArbitraryAudioChunk)

RIFFWAVEHeader = _reflection.GeneratedProtocolMessageType('RIFFWAVEHeader', (_message.Message,), {
  'DESCRIPTOR' : _RIFFWAVEHEADER,
  '__module__' : 'freem_protocols.freem_box.audio_pb2'
  # @@protoc_insertion_point(class_scope:freem_box.audio.RIFFWAVEHeader)
  })
_sym_db.RegisterMessage(RIFFWAVEHeader)

RIFFWAVEChunk = _reflection.GeneratedProtocolMessageType('RIFFWAVEChunk', (_message.Message,), {
  'DESCRIPTOR' : _RIFFWAVECHUNK,
  '__module__' : 'freem_protocols.freem_box.audio_pb2'
  # @@protoc_insertion_point(class_scope:freem_box.audio.RIFFWAVEChunk)
  })
_sym_db.RegisterMessage(RIFFWAVEChunk)

OpusHeader = _reflection.GeneratedProtocolMessageType('OpusHeader', (_message.Message,), {
  'DESCRIPTOR' : _OPUSHEADER,
  '__module__' : 'freem_protocols.freem_box.audio_pb2'
  # @@protoc_insertion_point(class_scope:freem_box.audio.OpusHeader)
  })
_sym_db.RegisterMessage(OpusHeader)

OpusChunk = _reflection.GeneratedProtocolMessageType('OpusChunk', (_message.Message,), {
  'DESCRIPTOR' : _OPUSCHUNK,
  '__module__' : 'freem_protocols.freem_box.audio_pb2'
  # @@protoc_insertion_point(class_scope:freem_box.audio.OpusChunk)
  })
_sym_db.RegisterMessage(OpusChunk)

DiscordRadioStreamChunk = _reflection.GeneratedProtocolMessageType('DiscordRadioStreamChunk', (_message.Message,), {
  'DESCRIPTOR' : _DISCORDRADIOSTREAMCHUNK,
  '__module__' : 'freem_protocols.freem_box.audio_pb2'
  # @@protoc_insertion_point(class_scope:freem_box.audio.DiscordRadioStreamChunk)
  })
_sym_db.RegisterMessage(DiscordRadioStreamChunk)

StreamingParameters = _reflection.GeneratedProtocolMessageType('StreamingParameters', (_message.Message,), {
  'DESCRIPTOR' : _STREAMINGPARAMETERS,
  '__module__' : 'freem_protocols.freem_box.audio_pb2'
  # @@protoc_insertion_point(class_scope:freem_box.audio.StreamingParameters)
  })
_sym_db.RegisterMessage(StreamingParameters)

DiscordRadioStreamRequest = _reflection.GeneratedProtocolMessageType('DiscordRadioStreamRequest', (_message.Message,), {
  'DESCRIPTOR' : _DISCORDRADIOSTREAMREQUEST,
  '__module__' : 'freem_protocols.freem_box.audio_pb2'
  # @@protoc_insertion_point(class_scope:freem_box.audio.DiscordRadioStreamRequest)
  })
_sym_db.RegisterMessage(DiscordRadioStreamRequest)

DiscordRadioStreamResponse = _reflection.GeneratedProtocolMessageType('DiscordRadioStreamResponse', (_message.Message,), {
  'DESCRIPTOR' : _DISCORDRADIOSTREAMRESPONSE,
  '__module__' : 'freem_protocols.freem_box.audio_pb2'
  # @@protoc_insertion_point(class_scope:freem_box.audio.DiscordRadioStreamResponse)
  })
_sym_db.RegisterMessage(DiscordRadioStreamResponse)

YoutubeUrlForSpotifyIDRequest = _reflection.GeneratedProtocolMessageType('YoutubeUrlForSpotifyIDRequest', (_message.Message,), {
  'DESCRIPTOR' : _YOUTUBEURLFORSPOTIFYIDREQUEST,
  '__module__' : 'freem_protocols.freem_box.audio_pb2'
  # @@protoc_insertion_point(class_scope:freem_box.audio.YoutubeUrlForSpotifyIDRequest)
  })
_sym_db.RegisterMessage(YoutubeUrlForSpotifyIDRequest)

YoutubeUrlForSpotifyIDResponse = _reflection.GeneratedProtocolMessageType('YoutubeUrlForSpotifyIDResponse', (_message.Message,), {
  'DESCRIPTOR' : _YOUTUBEURLFORSPOTIFYIDRESPONSE,
  '__module__' : 'freem_protocols.freem_box.audio_pb2'
  # @@protoc_insertion_point(class_scope:freem_box.audio.YoutubeUrlForSpotifyIDResponse)
  })
_sym_db.RegisterMessage(YoutubeUrlForSpotifyIDResponse)

YoutubeAudioDataRequest = _reflection.GeneratedProtocolMessageType('YoutubeAudioDataRequest', (_message.Message,), {
  'DESCRIPTOR' : _YOUTUBEAUDIODATAREQUEST,
  '__module__' : 'freem_protocols.freem_box.audio_pb2'
  # @@protoc_insertion_point(class_scope:freem_box.audio.YoutubeAudioDataRequest)
  })
_sym_db.RegisterMessage(YoutubeAudioDataRequest)

YoutubeAudioDataResponse = _reflection.GeneratedProtocolMessageType('YoutubeAudioDataResponse', (_message.Message,), {
  'DESCRIPTOR' : _YOUTUBEAUDIODATARESPONSE,
  '__module__' : 'freem_protocols.freem_box.audio_pb2'
  # @@protoc_insertion_point(class_scope:freem_box.audio.YoutubeAudioDataResponse)
  })
_sym_db.RegisterMessage(YoutubeAudioDataResponse)

_AUDIOSERVICE = DESCRIPTOR.services_by_name['AudioService']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _YOUTUBEFAILUREREASON._serialized_start=1864
  _YOUTUBEFAILUREREASON._serialized_end=1952
  _STATECHANGE._serialized_start=59
  _STATECHANGE._serialized_end=685
  _STATECHANGE_STATE._serialized_start=274
  _STATECHANGE_STATE._serialized_end=685
  _ARBITRARYAUDIOCHUNK._serialized_start=687
  _ARBITRARYAUDIOCHUNK._serialized_end=784
  _RIFFWAVEHEADER._serialized_start=786
  _RIFFWAVEHEADER._serialized_end=889
  _RIFFWAVECHUNK._serialized_start=891
  _RIFFWAVECHUNK._serialized_end=959
  _OPUSHEADER._serialized_start=961
  _OPUSHEADER._serialized_end=999
  _OPUSCHUNK._serialized_start=1001
  _OPUSCHUNK._serialized_end=1065
  _DISCORDRADIOSTREAMCHUNK._serialized_start=1068
  _DISCORDRADIOSTREAMCHUNK._serialized_end=1233
  _STREAMINGPARAMETERS._serialized_start=1236
  _STREAMINGPARAMETERS._serialized_end=1407
  _DISCORDRADIOSTREAMREQUEST._serialized_start=1409
  _DISCORDRADIOSTREAMREQUEST._serialized_end=1506
  _DISCORDRADIOSTREAMRESPONSE._serialized_start=1508
  _DISCORDRADIOSTREAMRESPONSE._serialized_end=1594
  _YOUTUBEURLFORSPOTIFYIDREQUEST._serialized_start=1596
  _YOUTUBEURLFORSPOTIFYIDREQUEST._serialized_end=1639
  _YOUTUBEURLFORSPOTIFYIDRESPONSE._serialized_start=1641
  _YOUTUBEURLFORSPOTIFYIDRESPONSE._serialized_end=1686
  _YOUTUBEAUDIODATAREQUEST._serialized_start=1688
  _YOUTUBEAUDIODATAREQUEST._serialized_end=1726
  _YOUTUBEAUDIODATARESPONSE._serialized_start=1729
  _YOUTUBEAUDIODATARESPONSE._serialized_end=1862
  _AUDIOSERVICE._serialized_start=1955
  _AUDIOSERVICE._serialized_end=2318
# @@protoc_insertion_point(module_scope)
