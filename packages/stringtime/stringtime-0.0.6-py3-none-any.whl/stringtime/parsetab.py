# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = "3.10"

_lr_method = "LALR"

_lr_signature = "A AFTER_TOMORROW AM AT BEFORE_YESTERDAY COLON DATE_END DAY MINUS MONTH NUMBER OF ON PAST_PHRASE PHRASE PLUS PM THE TIME TODAY TOMORROW WORD_NUMBER YEAR YESTERDAY\n    date_object :\n    date_object : date_list\n    date_list : date_list date\n    date_list : date\n    date_list : date_past\n    date_list : in\n    date_list : adder\n    date_list : remover\n    date_list : date_yesterday\n    date_list : date_2moro\n    date_list : date_day\n    date_list : date_end\n    date_list : date_or\n    date_list : date_before_yesterday\n    date_list : date_after_tomorrow\n    date_list : date_twice\n    date_list : timestamp\n    date_list : timestamp_adpt\n    \n    timestamp : NUMBER COLON NUMBER\n    timestamp : NUMBER COLON NUMBER COLON NUMBER\n    \n    timestamp_adpt : timestamp AM\n    timestamp_adpt : timestamp PM\n    timestamp_adpt : AT timestamp\n    timestamp_adpt : AT timestamp PM\n    timestamp_adpt : AT timestamp AM\n    \n    date : NUMBER\n    date : WORD_NUMBER\n    date : AT NUMBER\n    date : AT WORD_NUMBER\n    date : TIME\n    date : NUMBER TIME\n    date : NUMBER AM\n    date : NUMBER PM\n    date : AT NUMBER AM\n    date : AT NUMBER PM\n    date : WORD_NUMBER TIME\n    date : PHRASE TIME\n    date : TIME PHRASE\n    date : NUMBER TIME PHRASE\n    date : WORD_NUMBER TIME PHRASE\n    date : PHRASE TIME PHRASE\n    \n    date_twice : date date\n    date_twice : date_day date\n    \n    in : PHRASE NUMBER TIME\n    in : PHRASE WORD_NUMBER TIME\n    \n    adder : PLUS NUMBER TIME\n    adder : PLUS WORD_NUMBER TIME\n    \n    remover : MINUS NUMBER TIME\n    remover : MINUS WORD_NUMBER TIME\n    \n    date_past : NUMBER TIME PAST_PHRASE\n    date_past : WORD_NUMBER TIME PAST_PHRASE\n    \n    date_yesterday : YESTERDAY\n    date_yesterday : YESTERDAY AT NUMBER\n    date_yesterday : YESTERDAY AT WORD_NUMBER\n    \n    date_2moro : TOMORROW\n    date_2moro : TOMORROW AT NUMBER\n    date_2moro : TOMORROW AT WORD_NUMBER\n    \n    date_day : DAY\n    date_day : ON DAY\n    date_day : PHRASE DAY\n    date_day : PAST_PHRASE DAY\n    \n    date_or : PAST_PHRASE TIME\n    \n    date_before_yesterday : BEFORE_YESTERDAY\n    date_before_yesterday : THE BEFORE_YESTERDAY\n    date_before_yesterday : THE TIME BEFORE_YESTERDAY\n    \n    date_after_tomorrow : AFTER_TOMORROW\n    date_after_tomorrow : THE TIME AFTER_TOMORROW\n    \n    date_end : NUMBER DATE_END\n    date_end : THE NUMBER DATE_END\n    date_end : MONTH NUMBER DATE_END\n    date_end : NUMBER DATE_END OF MONTH\n    date_end : ON THE NUMBER DATE_END\n    date_end : MONTH THE NUMBER DATE_END\n    date_end : THE NUMBER DATE_END OF MONTH\n    "

_lr_action_items = {
    "$end": (
        [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            21,
            26,
            27,
            28,
            32,
            33,
            34,
            35,
            36,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            48,
            49,
            50,
            51,
            52,
            53,
            56,
            57,
            58,
            65,
            68,
            72,
            73,
            74,
            75,
            76,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            97,
            98,
            99,
            100,
            102,
            104,
            106,
            107,
            108,
        ],
        [
            -1,
            0,
            -2,
            -4,
            -5,
            -6,
            -7,
            -8,
            -9,
            -10,
            -11,
            -12,
            -13,
            -14,
            -15,
            -16,
            -17,
            -18,
            -26,
            -27,
            -30,
            -52,
            -55,
            -58,
            -63,
            -66,
            -3,
            -26,
            -27,
            -42,
            -43,
            -21,
            -22,
            -31,
            -32,
            -33,
            -68,
            -36,
            -28,
            -29,
            -23,
            -38,
            -37,
            -60,
            -61,
            -62,
            -59,
            -64,
            -31,
            -36,
            -28,
            -39,
            -50,
            -19,
            -40,
            -51,
            -34,
            -35,
            -24,
            -25,
            -41,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -53,
            -54,
            -56,
            -57,
            -69,
            -65,
            -67,
            -70,
            -71,
            -72,
            -73,
            -20,
            -74,
        ],
    ),
    "NUMBER": (
        [
            0,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            24,
            25,
            26,
            27,
            28,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            56,
            57,
            58,
            63,
            64,
            65,
            66,
            68,
            71,
            72,
            73,
            74,
            75,
            76,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            97,
            98,
            99,
            100,
            102,
            103,
            104,
            106,
            107,
            108,
        ],
        [
            18,
            35,
            35,
            -5,
            -6,
            -7,
            -8,
            -9,
            -10,
            35,
            -12,
            -13,
            -14,
            -15,
            -16,
            -17,
            -18,
            -26,
            -27,
            49,
            -30,
            54,
            59,
            61,
            -52,
            -55,
            -58,
            67,
            70,
            -63,
            -66,
            -3,
            -26,
            -27,
            74,
            -42,
            -43,
            -21,
            -22,
            -31,
            -32,
            -33,
            -68,
            78,
            -36,
            -28,
            -29,
            -23,
            -38,
            -37,
            -60,
            -61,
            -62,
            92,
            94,
            -59,
            96,
            -64,
            101,
            -31,
            -36,
            -28,
            -39,
            -50,
            -19,
            -40,
            -51,
            -34,
            -35,
            -24,
            -25,
            -41,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -53,
            -54,
            -56,
            -57,
            -69,
            -65,
            -67,
            -70,
            -71,
            107,
            -72,
            -73,
            -20,
            -74,
        ],
    ),
    "WORD_NUMBER": (
        [
            0,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            24,
            25,
            26,
            27,
            28,
            32,
            33,
            34,
            35,
            36,
            37,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            48,
            49,
            50,
            51,
            52,
            53,
            56,
            57,
            58,
            63,
            64,
            65,
            68,
            72,
            73,
            74,
            75,
            76,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            97,
            98,
            99,
            100,
            102,
            104,
            106,
            107,
            108,
        ],
        [
            19,
            36,
            36,
            -5,
            -6,
            -7,
            -8,
            -9,
            -10,
            36,
            -12,
            -13,
            -14,
            -15,
            -16,
            -17,
            -18,
            -26,
            -27,
            50,
            -30,
            55,
            60,
            62,
            -52,
            -55,
            -58,
            -63,
            -66,
            -3,
            -26,
            -27,
            50,
            -42,
            -43,
            -21,
            -22,
            -31,
            -32,
            -33,
            -68,
            -36,
            -28,
            -29,
            -23,
            -38,
            -37,
            -60,
            -61,
            -62,
            93,
            95,
            -59,
            -64,
            -31,
            -36,
            -28,
            -39,
            -50,
            -19,
            -40,
            -51,
            -34,
            -35,
            -24,
            -25,
            -41,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -53,
            -54,
            -56,
            -57,
            -69,
            -65,
            -67,
            -70,
            -71,
            -72,
            -73,
            -20,
            -74,
        ],
    ),
    "AT": (
        [
            0,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            21,
            26,
            27,
            28,
            32,
            33,
            34,
            35,
            36,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            48,
            49,
            50,
            51,
            52,
            53,
            56,
            57,
            58,
            65,
            68,
            72,
            73,
            74,
            75,
            76,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            97,
            98,
            99,
            100,
            102,
            104,
            106,
            107,
            108,
        ],
        [
            20,
            37,
            37,
            -5,
            -6,
            -7,
            -8,
            -9,
            -10,
            37,
            -12,
            -13,
            -14,
            -15,
            -16,
            -17,
            -18,
            -26,
            -27,
            -30,
            63,
            64,
            -58,
            -63,
            -66,
            -3,
            -26,
            -27,
            -42,
            -43,
            -21,
            -22,
            -31,
            -32,
            -33,
            -68,
            -36,
            -28,
            -29,
            -23,
            -38,
            -37,
            -60,
            -61,
            -62,
            -59,
            -64,
            -31,
            -36,
            -28,
            -39,
            -50,
            -19,
            -40,
            -51,
            -34,
            -35,
            -24,
            -25,
            -41,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -53,
            -54,
            -56,
            -57,
            -69,
            -65,
            -67,
            -70,
            -71,
            -72,
            -73,
            -20,
            -74,
        ],
    ),
    "TIME": (
        [
            0,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            21,
            22,
            23,
            26,
            27,
            28,
            30,
            32,
            33,
            34,
            35,
            36,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            65,
            68,
            72,
            73,
            74,
            75,
            76,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            97,
            98,
            99,
            100,
            102,
            104,
            106,
            107,
            108,
        ],
        [
            21,
            21,
            21,
            -5,
            -6,
            -7,
            -8,
            -9,
            -10,
            21,
            -12,
            -13,
            -14,
            -15,
            -16,
            -17,
            -18,
            43,
            48,
            -30,
            53,
            58,
            -52,
            -55,
            -58,
            69,
            -63,
            -66,
            -3,
            72,
            73,
            53,
            -42,
            -43,
            -21,
            -22,
            -31,
            -32,
            -33,
            -68,
            -36,
            -28,
            -29,
            -23,
            -38,
            -37,
            86,
            87,
            -60,
            -61,
            -62,
            88,
            89,
            90,
            91,
            -59,
            -64,
            -31,
            -36,
            -28,
            -39,
            -50,
            -19,
            -40,
            -51,
            -34,
            -35,
            -24,
            -25,
            -41,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -53,
            -54,
            -56,
            -57,
            -69,
            -65,
            -67,
            -70,
            -71,
            -72,
            -73,
            -20,
            -74,
        ],
    ),
    "PHRASE": (
        [
            0,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            21,
            26,
            27,
            28,
            32,
            33,
            34,
            35,
            36,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            48,
            49,
            50,
            51,
            52,
            53,
            56,
            57,
            58,
            65,
            68,
            72,
            73,
            74,
            75,
            76,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            97,
            98,
            99,
            100,
            102,
            104,
            106,
            107,
            108,
        ],
        [
            22,
            38,
            38,
            -5,
            -6,
            -7,
            -8,
            -9,
            -10,
            38,
            -12,
            -13,
            -14,
            -15,
            -16,
            -17,
            -18,
            -26,
            -27,
            52,
            -52,
            -55,
            -58,
            -63,
            -66,
            -3,
            -26,
            -27,
            -42,
            -43,
            -21,
            -22,
            75,
            -32,
            -33,
            -68,
            79,
            -28,
            -29,
            -23,
            -38,
            85,
            -60,
            -61,
            -62,
            -59,
            -64,
            75,
            79,
            -28,
            -39,
            -50,
            -19,
            -40,
            -51,
            -34,
            -35,
            -24,
            -25,
            -41,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -53,
            -54,
            -56,
            -57,
            -69,
            -65,
            -67,
            -70,
            -71,
            -72,
            -73,
            -20,
            -74,
        ],
    ),
    "PLUS": (
        [
            0,
        ],
        [
            24,
        ],
    ),
    "MINUS": (
        [
            0,
        ],
        [
            25,
        ],
    ),
    "YESTERDAY": (
        [
            0,
        ],
        [
            26,
        ],
    ),
    "TOMORROW": (
        [
            0,
        ],
        [
            27,
        ],
    ),
    "DAY": (
        [
            0,
            22,
            23,
            29,
        ],
        [
            28,
            56,
            57,
            65,
        ],
    ),
    "ON": (
        [
            0,
        ],
        [
            29,
        ],
    ),
    "PAST_PHRASE": (
        [
            0,
            43,
            48,
        ],
        [
            23,
            76,
            80,
        ],
    ),
    "THE": (
        [
            0,
            29,
            31,
        ],
        [
            30,
            66,
            71,
        ],
    ),
    "MONTH": (
        [
            0,
            77,
            105,
        ],
        [
            31,
            102,
            108,
        ],
    ),
    "BEFORE_YESTERDAY": (
        [
            0,
            30,
            69,
        ],
        [
            32,
            68,
            98,
        ],
    ),
    "AFTER_TOMORROW": (
        [
            0,
            69,
        ],
        [
            33,
            99,
        ],
    ),
    "AM": (
        [
            16,
            18,
            35,
            49,
            51,
            74,
            78,
            107,
        ],
        [
            41,
            44,
            44,
            81,
            84,
            81,
            -19,
            -20,
        ],
    ),
    "PM": (
        [
            16,
            18,
            35,
            49,
            51,
            74,
            78,
            107,
        ],
        [
            42,
            45,
            45,
            82,
            83,
            82,
            -19,
            -20,
        ],
    ),
    "DATE_END": (
        [
            18,
            67,
            70,
            96,
            101,
        ],
        [
            46,
            97,
            100,
            104,
            106,
        ],
    ),
    "COLON": (
        [
            18,
            49,
            78,
        ],
        [
            47,
            47,
            103,
        ],
    ),
    "OF": (
        [
            46,
            97,
        ],
        [
            77,
            105,
        ],
    ),
}

_lr_action = {}
for _k, _v in _lr_action_items.items():
    for _x, _y in zip(_v[0], _v[1]):
        if not _x in _lr_action:
            _lr_action[_x] = {}
        _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {
    "date_object": (
        [
            0,
        ],
        [
            1,
        ],
    ),
    "date_list": (
        [
            0,
        ],
        [
            2,
        ],
    ),
    "date": (
        [
            0,
            2,
            3,
            10,
        ],
        [
            3,
            34,
            39,
            40,
        ],
    ),
    "date_past": (
        [
            0,
        ],
        [
            4,
        ],
    ),
    "in": (
        [
            0,
        ],
        [
            5,
        ],
    ),
    "adder": (
        [
            0,
        ],
        [
            6,
        ],
    ),
    "remover": (
        [
            0,
        ],
        [
            7,
        ],
    ),
    "date_yesterday": (
        [
            0,
        ],
        [
            8,
        ],
    ),
    "date_2moro": (
        [
            0,
        ],
        [
            9,
        ],
    ),
    "date_day": (
        [
            0,
        ],
        [
            10,
        ],
    ),
    "date_end": (
        [
            0,
        ],
        [
            11,
        ],
    ),
    "date_or": (
        [
            0,
        ],
        [
            12,
        ],
    ),
    "date_before_yesterday": (
        [
            0,
        ],
        [
            13,
        ],
    ),
    "date_after_tomorrow": (
        [
            0,
        ],
        [
            14,
        ],
    ),
    "date_twice": (
        [
            0,
        ],
        [
            15,
        ],
    ),
    "timestamp": (
        [
            0,
            20,
        ],
        [
            16,
            51,
        ],
    ),
    "timestamp_adpt": (
        [
            0,
        ],
        [
            17,
        ],
    ),
}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
    for _x, _y in zip(_v[0], _v[1]):
        if not _x in _lr_goto:
            _lr_goto[_x] = {}
        _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
    ("S' -> date_object", "S'", 1, None, None, None),
    ("date_object -> <empty>", "date_object", 0, "p_date_object", "__init__.py", 422),
    ("date_object -> date_list", "date_object", 1, "p_date_object", "__init__.py", 423),
    ("date_list -> date_list date", "date_list", 2, "p_date_list", "__init__.py", 433),
    ("date_list -> date", "date_list", 1, "p_date", "__init__.py", 439),
    ("date_list -> date_past", "date_list", 1, "p_date", "__init__.py", 440),
    ("date_list -> in", "date_list", 1, "p_date", "__init__.py", 441),
    ("date_list -> adder", "date_list", 1, "p_date", "__init__.py", 442),
    ("date_list -> remover", "date_list", 1, "p_date", "__init__.py", 443),
    ("date_list -> date_yesterday", "date_list", 1, "p_date", "__init__.py", 444),
    ("date_list -> date_2moro", "date_list", 1, "p_date", "__init__.py", 445),
    ("date_list -> date_day", "date_list", 1, "p_date", "__init__.py", 446),
    ("date_list -> date_end", "date_list", 1, "p_date", "__init__.py", 447),
    ("date_list -> date_or", "date_list", 1, "p_date", "__init__.py", 448),
    (
        "date_list -> date_before_yesterday",
        "date_list",
        1,
        "p_date",
        "__init__.py",
        449,
    ),
    ("date_list -> date_after_tomorrow", "date_list", 1, "p_date", "__init__.py", 450),
    ("date_list -> date_twice", "date_list", 1, "p_date", "__init__.py", 451),
    ("date_list -> timestamp", "date_list", 1, "p_date", "__init__.py", 452),
    ("date_list -> timestamp_adpt", "date_list", 1, "p_date", "__init__.py", 453),
    (
        "timestamp -> NUMBER COLON NUMBER",
        "timestamp",
        3,
        "p_timestamp",
        "__init__.py",
        473,
    ),
    (
        "timestamp -> NUMBER COLON NUMBER COLON NUMBER",
        "timestamp",
        5,
        "p_timestamp",
        "__init__.py",
        474,
    ),
    (
        "timestamp_adpt -> timestamp AM",
        "timestamp_adpt",
        2,
        "p_timestamp_adapter",
        "__init__.py",
        497,
    ),
    (
        "timestamp_adpt -> timestamp PM",
        "timestamp_adpt",
        2,
        "p_timestamp_adapter",
        "__init__.py",
        498,
    ),
    (
        "timestamp_adpt -> AT timestamp",
        "timestamp_adpt",
        2,
        "p_timestamp_adapter",
        "__init__.py",
        499,
    ),
    (
        "timestamp_adpt -> AT timestamp PM",
        "timestamp_adpt",
        3,
        "p_timestamp_adapter",
        "__init__.py",
        500,
    ),
    (
        "timestamp_adpt -> AT timestamp AM",
        "timestamp_adpt",
        3,
        "p_timestamp_adapter",
        "__init__.py",
        501,
    ),
    ("date -> NUMBER", "date", 1, "p_single_date", "__init__.py", 516),
    ("date -> WORD_NUMBER", "date", 1, "p_single_date", "__init__.py", 517),
    ("date -> AT NUMBER", "date", 2, "p_single_date", "__init__.py", 518),
    ("date -> AT WORD_NUMBER", "date", 2, "p_single_date", "__init__.py", 519),
    ("date -> TIME", "date", 1, "p_single_date", "__init__.py", 520),
    ("date -> NUMBER TIME", "date", 2, "p_single_date", "__init__.py", 521),
    ("date -> NUMBER AM", "date", 2, "p_single_date", "__init__.py", 522),
    ("date -> NUMBER PM", "date", 2, "p_single_date", "__init__.py", 523),
    ("date -> AT NUMBER AM", "date", 3, "p_single_date", "__init__.py", 524),
    ("date -> AT NUMBER PM", "date", 3, "p_single_date", "__init__.py", 525),
    ("date -> WORD_NUMBER TIME", "date", 2, "p_single_date", "__init__.py", 526),
    ("date -> PHRASE TIME", "date", 2, "p_single_date", "__init__.py", 527),
    ("date -> TIME PHRASE", "date", 2, "p_single_date", "__init__.py", 528),
    ("date -> NUMBER TIME PHRASE", "date", 3, "p_single_date", "__init__.py", 529),
    ("date -> WORD_NUMBER TIME PHRASE", "date", 3, "p_single_date", "__init__.py", 530),
    ("date -> PHRASE TIME PHRASE", "date", 3, "p_single_date", "__init__.py", 531),
    ("date_twice -> date date", "date_twice", 2, "p_twice", "__init__.py", 610),
    ("date_twice -> date_day date", "date_twice", 2, "p_twice", "__init__.py", 611),
    ("in -> PHRASE NUMBER TIME", "in", 3, "p_single_date_in", "__init__.py", 641),
    ("in -> PHRASE WORD_NUMBER TIME", "in", 3, "p_single_date_in", "__init__.py", 642),
    ("adder -> PLUS NUMBER TIME", "adder", 3, "p_single_date_plus", "__init__.py", 655),
    (
        "adder -> PLUS WORD_NUMBER TIME",
        "adder",
        3,
        "p_single_date_plus",
        "__init__.py",
        656,
    ),
    (
        "remover -> MINUS NUMBER TIME",
        "remover",
        3,
        "p_single_date_minus",
        "__init__.py",
        669,
    ),
    (
        "remover -> MINUS WORD_NUMBER TIME",
        "remover",
        3,
        "p_single_date_minus",
        "__init__.py",
        670,
    ),
    (
        "date_past -> NUMBER TIME PAST_PHRASE",
        "date_past",
        3,
        "p_single_date_past",
        "__init__.py",
        684,
    ),
    (
        "date_past -> WORD_NUMBER TIME PAST_PHRASE",
        "date_past",
        3,
        "p_single_date_past",
        "__init__.py",
        685,
    ),
    (
        "date_yesterday -> YESTERDAY",
        "date_yesterday",
        1,
        "p_single_date_yesterday",
        "__init__.py",
        693,
    ),
    (
        "date_yesterday -> YESTERDAY AT NUMBER",
        "date_yesterday",
        3,
        "p_single_date_yesterday",
        "__init__.py",
        694,
    ),
    (
        "date_yesterday -> YESTERDAY AT WORD_NUMBER",
        "date_yesterday",
        3,
        "p_single_date_yesterday",
        "__init__.py",
        695,
    ),
    (
        "date_2moro -> TOMORROW",
        "date_2moro",
        1,
        "p_single_date_2moro",
        "__init__.py",
        712,
    ),
    (
        "date_2moro -> TOMORROW AT NUMBER",
        "date_2moro",
        3,
        "p_single_date_2moro",
        "__init__.py",
        713,
    ),
    (
        "date_2moro -> TOMORROW AT WORD_NUMBER",
        "date_2moro",
        3,
        "p_single_date_2moro",
        "__init__.py",
        714,
    ),
    ("date_day -> DAY", "date_day", 1, "p_single_date_day", "__init__.py", 731),
    ("date_day -> ON DAY", "date_day", 2, "p_single_date_day", "__init__.py", 732),
    ("date_day -> PHRASE DAY", "date_day", 2, "p_single_date_day", "__init__.py", 733),
    (
        "date_day -> PAST_PHRASE DAY",
        "date_day",
        2,
        "p_single_date_day",
        "__init__.py",
        734,
    ),
    (
        "date_or -> PAST_PHRASE TIME",
        "date_or",
        2,
        "p_this_or_next_period",
        "__init__.py",
        765,
    ),
    (
        "date_before_yesterday -> BEFORE_YESTERDAY",
        "date_before_yesterday",
        1,
        "p_before_yesterday",
        "__init__.py",
        786,
    ),
    (
        "date_before_yesterday -> THE BEFORE_YESTERDAY",
        "date_before_yesterday",
        2,
        "p_before_yesterday",
        "__init__.py",
        787,
    ),
    (
        "date_before_yesterday -> THE TIME BEFORE_YESTERDAY",
        "date_before_yesterday",
        3,
        "p_before_yesterday",
        "__init__.py",
        788,
    ),
    (
        "date_after_tomorrow -> AFTER_TOMORROW",
        "date_after_tomorrow",
        1,
        "p_after_tomorrow",
        "__init__.py",
        798,
    ),
    (
        "date_after_tomorrow -> THE TIME AFTER_TOMORROW",
        "date_after_tomorrow",
        3,
        "p_after_tomorrow",
        "__init__.py",
        799,
    ),
    (
        "date_end -> NUMBER DATE_END",
        "date_end",
        2,
        "p_single_date_end",
        "__init__.py",
        809,
    ),
    (
        "date_end -> THE NUMBER DATE_END",
        "date_end",
        3,
        "p_single_date_end",
        "__init__.py",
        810,
    ),
    (
        "date_end -> MONTH NUMBER DATE_END",
        "date_end",
        3,
        "p_single_date_end",
        "__init__.py",
        811,
    ),
    (
        "date_end -> NUMBER DATE_END OF MONTH",
        "date_end",
        4,
        "p_single_date_end",
        "__init__.py",
        812,
    ),
    (
        "date_end -> ON THE NUMBER DATE_END",
        "date_end",
        4,
        "p_single_date_end",
        "__init__.py",
        813,
    ),
    (
        "date_end -> MONTH THE NUMBER DATE_END",
        "date_end",
        4,
        "p_single_date_end",
        "__init__.py",
        814,
    ),
    (
        "date_end -> THE NUMBER DATE_END OF MONTH",
        "date_end",
        5,
        "p_single_date_end",
        "__init__.py",
        815,
    ),
]
